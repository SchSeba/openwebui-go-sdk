/*
Open WebUI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ToolServersConfigForm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ToolServersConfigForm{}

// ToolServersConfigForm struct for ToolServersConfigForm
type ToolServersConfigForm struct {
	TOOL_SERVER_CONNECTIONS []ToolServerConnection `json:"TOOL_SERVER_CONNECTIONS"`
}

type _ToolServersConfigForm ToolServersConfigForm

// NewToolServersConfigForm instantiates a new ToolServersConfigForm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewToolServersConfigForm(tOOLSERVERCONNECTIONS []ToolServerConnection) *ToolServersConfigForm {
	this := ToolServersConfigForm{}
	this.TOOL_SERVER_CONNECTIONS = tOOLSERVERCONNECTIONS
	return &this
}

// NewToolServersConfigFormWithDefaults instantiates a new ToolServersConfigForm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewToolServersConfigFormWithDefaults() *ToolServersConfigForm {
	this := ToolServersConfigForm{}
	return &this
}

// GetTOOL_SERVER_CONNECTIONS returns the TOOL_SERVER_CONNECTIONS field value
func (o *ToolServersConfigForm) GetTOOL_SERVER_CONNECTIONS() []ToolServerConnection {
	if o == nil {
		var ret []ToolServerConnection
		return ret
	}

	return o.TOOL_SERVER_CONNECTIONS
}

// GetTOOL_SERVER_CONNECTIONSOk returns a tuple with the TOOL_SERVER_CONNECTIONS field value
// and a boolean to check if the value has been set.
func (o *ToolServersConfigForm) GetTOOL_SERVER_CONNECTIONSOk() ([]ToolServerConnection, bool) {
	if o == nil {
		return nil, false
	}
	return o.TOOL_SERVER_CONNECTIONS, true
}

// SetTOOL_SERVER_CONNECTIONS sets field value
func (o *ToolServersConfigForm) SetTOOL_SERVER_CONNECTIONS(v []ToolServerConnection) {
	o.TOOL_SERVER_CONNECTIONS = v
}

func (o ToolServersConfigForm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ToolServersConfigForm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["TOOL_SERVER_CONNECTIONS"] = o.TOOL_SERVER_CONNECTIONS
	return toSerialize, nil
}

func (o *ToolServersConfigForm) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"TOOL_SERVER_CONNECTIONS",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varToolServersConfigForm := _ToolServersConfigForm{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varToolServersConfigForm)

	if err != nil {
		return err
	}

	*o = ToolServersConfigForm(varToolServersConfigForm)

	return err
}

type NullableToolServersConfigForm struct {
	value *ToolServersConfigForm
	isSet bool
}

func (v NullableToolServersConfigForm) Get() *ToolServersConfigForm {
	return v.value
}

func (v *NullableToolServersConfigForm) Set(val *ToolServersConfigForm) {
	v.value = val
	v.isSet = true
}

func (v NullableToolServersConfigForm) IsSet() bool {
	return v.isSet
}

func (v *NullableToolServersConfigForm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableToolServersConfigForm(val *ToolServersConfigForm) *NullableToolServersConfigForm {
	return &NullableToolServersConfigForm{value: val, isSet: true}
}

func (v NullableToolServersConfigForm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableToolServersConfigForm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


