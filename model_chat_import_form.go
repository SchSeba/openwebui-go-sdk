/*
Open WebUI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ChatImportForm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChatImportForm{}

// ChatImportForm struct for ChatImportForm
type ChatImportForm struct {
	Chat map[string]interface{} `json:"chat"`
	FolderId NullableString `json:"folder_id,omitempty"`
	Meta map[string]interface{} `json:"meta,omitempty"`
	Pinned NullableBool `json:"pinned,omitempty"`
	CreatedAt NullableInt32 `json:"created_at,omitempty"`
	UpdatedAt NullableInt32 `json:"updated_at,omitempty"`
}

type _ChatImportForm ChatImportForm

// NewChatImportForm instantiates a new ChatImportForm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChatImportForm(chat map[string]interface{}) *ChatImportForm {
	this := ChatImportForm{}
	this.Chat = chat
	return &this
}

// NewChatImportFormWithDefaults instantiates a new ChatImportForm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChatImportFormWithDefaults() *ChatImportForm {
	this := ChatImportForm{}
	return &this
}

// GetChat returns the Chat field value
func (o *ChatImportForm) GetChat() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Chat
}

// GetChatOk returns a tuple with the Chat field value
// and a boolean to check if the value has been set.
func (o *ChatImportForm) GetChatOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Chat, true
}

// SetChat sets field value
func (o *ChatImportForm) SetChat(v map[string]interface{}) {
	o.Chat = v
}

// GetFolderId returns the FolderId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChatImportForm) GetFolderId() string {
	if o == nil || IsNil(o.FolderId.Get()) {
		var ret string
		return ret
	}
	return *o.FolderId.Get()
}

// GetFolderIdOk returns a tuple with the FolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChatImportForm) GetFolderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FolderId.Get(), o.FolderId.IsSet()
}

// HasFolderId returns a boolean if a field has been set.
func (o *ChatImportForm) HasFolderId() bool {
	if o != nil && o.FolderId.IsSet() {
		return true
	}

	return false
}

// SetFolderId gets a reference to the given NullableString and assigns it to the FolderId field.
func (o *ChatImportForm) SetFolderId(v string) {
	o.FolderId.Set(&v)
}
// SetFolderIdNil sets the value for FolderId to be an explicit nil
func (o *ChatImportForm) SetFolderIdNil() {
	o.FolderId.Set(nil)
}

// UnsetFolderId ensures that no value is present for FolderId, not even an explicit nil
func (o *ChatImportForm) UnsetFolderId() {
	o.FolderId.Unset()
}

// GetMeta returns the Meta field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChatImportForm) GetMeta() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChatImportForm) GetMetaOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Meta) {
		return map[string]interface{}{}, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *ChatImportForm) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given map[string]interface{} and assigns it to the Meta field.
func (o *ChatImportForm) SetMeta(v map[string]interface{}) {
	o.Meta = v
}

// GetPinned returns the Pinned field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChatImportForm) GetPinned() bool {
	if o == nil || IsNil(o.Pinned.Get()) {
		var ret bool
		return ret
	}
	return *o.Pinned.Get()
}

// GetPinnedOk returns a tuple with the Pinned field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChatImportForm) GetPinnedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Pinned.Get(), o.Pinned.IsSet()
}

// HasPinned returns a boolean if a field has been set.
func (o *ChatImportForm) HasPinned() bool {
	if o != nil && o.Pinned.IsSet() {
		return true
	}

	return false
}

// SetPinned gets a reference to the given NullableBool and assigns it to the Pinned field.
func (o *ChatImportForm) SetPinned(v bool) {
	o.Pinned.Set(&v)
}
// SetPinnedNil sets the value for Pinned to be an explicit nil
func (o *ChatImportForm) SetPinnedNil() {
	o.Pinned.Set(nil)
}

// UnsetPinned ensures that no value is present for Pinned, not even an explicit nil
func (o *ChatImportForm) UnsetPinned() {
	o.Pinned.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChatImportForm) GetCreatedAt() int32 {
	if o == nil || IsNil(o.CreatedAt.Get()) {
		var ret int32
		return ret
	}
	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChatImportForm) GetCreatedAtOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ChatImportForm) HasCreatedAt() bool {
	if o != nil && o.CreatedAt.IsSet() {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given NullableInt32 and assigns it to the CreatedAt field.
func (o *ChatImportForm) SetCreatedAt(v int32) {
	o.CreatedAt.Set(&v)
}
// SetCreatedAtNil sets the value for CreatedAt to be an explicit nil
func (o *ChatImportForm) SetCreatedAtNil() {
	o.CreatedAt.Set(nil)
}

// UnsetCreatedAt ensures that no value is present for CreatedAt, not even an explicit nil
func (o *ChatImportForm) UnsetCreatedAt() {
	o.CreatedAt.Unset()
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChatImportForm) GetUpdatedAt() int32 {
	if o == nil || IsNil(o.UpdatedAt.Get()) {
		var ret int32
		return ret
	}
	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChatImportForm) GetUpdatedAtOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ChatImportForm) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given NullableInt32 and assigns it to the UpdatedAt field.
func (o *ChatImportForm) SetUpdatedAt(v int32) {
	o.UpdatedAt.Set(&v)
}
// SetUpdatedAtNil sets the value for UpdatedAt to be an explicit nil
func (o *ChatImportForm) SetUpdatedAtNil() {
	o.UpdatedAt.Set(nil)
}

// UnsetUpdatedAt ensures that no value is present for UpdatedAt, not even an explicit nil
func (o *ChatImportForm) UnsetUpdatedAt() {
	o.UpdatedAt.Unset()
}

func (o ChatImportForm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChatImportForm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["chat"] = o.Chat
	if o.FolderId.IsSet() {
		toSerialize["folder_id"] = o.FolderId.Get()
	}
	if o.Meta != nil {
		toSerialize["meta"] = o.Meta
	}
	if o.Pinned.IsSet() {
		toSerialize["pinned"] = o.Pinned.Get()
	}
	if o.CreatedAt.IsSet() {
		toSerialize["created_at"] = o.CreatedAt.Get()
	}
	if o.UpdatedAt.IsSet() {
		toSerialize["updated_at"] = o.UpdatedAt.Get()
	}
	return toSerialize, nil
}

func (o *ChatImportForm) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"chat",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varChatImportForm := _ChatImportForm{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varChatImportForm)

	if err != nil {
		return err
	}

	*o = ChatImportForm(varChatImportForm)

	return err
}

type NullableChatImportForm struct {
	value *ChatImportForm
	isSet bool
}

func (v NullableChatImportForm) Get() *ChatImportForm {
	return v.value
}

func (v *NullableChatImportForm) Set(val *ChatImportForm) {
	v.value = val
	v.isSet = true
}

func (v NullableChatImportForm) IsSet() bool {
	return v.isSet
}

func (v *NullableChatImportForm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChatImportForm(val *ChatImportForm) *NullableChatImportForm {
	return &NullableChatImportForm{value: val, isSet: true}
}

func (v NullableChatImportForm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChatImportForm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


