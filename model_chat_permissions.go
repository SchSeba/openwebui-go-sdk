/*
Open WebUI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ChatPermissions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChatPermissions{}

// ChatPermissions struct for ChatPermissions
type ChatPermissions struct {
	Controls *bool `json:"controls,omitempty"`
	SystemPrompt *bool `json:"system_prompt,omitempty"`
	FileUpload *bool `json:"file_upload,omitempty"`
	Delete *bool `json:"delete,omitempty"`
	Edit *bool `json:"edit,omitempty"`
	Share *bool `json:"share,omitempty"`
	Export *bool `json:"export,omitempty"`
	Stt *bool `json:"stt,omitempty"`
	Tts *bool `json:"tts,omitempty"`
	Call *bool `json:"call,omitempty"`
	MultipleModels *bool `json:"multiple_models,omitempty"`
	Temporary *bool `json:"temporary,omitempty"`
	TemporaryEnforced *bool `json:"temporary_enforced,omitempty"`
}

// NewChatPermissions instantiates a new ChatPermissions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChatPermissions() *ChatPermissions {
	this := ChatPermissions{}
	var controls bool = true
	this.Controls = &controls
	var systemPrompt bool = true
	this.SystemPrompt = &systemPrompt
	var fileUpload bool = true
	this.FileUpload = &fileUpload
	var delete bool = true
	this.Delete = &delete
	var edit bool = true
	this.Edit = &edit
	var share bool = true
	this.Share = &share
	var export bool = true
	this.Export = &export
	var stt bool = true
	this.Stt = &stt
	var tts bool = true
	this.Tts = &tts
	var call bool = true
	this.Call = &call
	var multipleModels bool = true
	this.MultipleModels = &multipleModels
	var temporary bool = true
	this.Temporary = &temporary
	var temporaryEnforced bool = false
	this.TemporaryEnforced = &temporaryEnforced
	return &this
}

// NewChatPermissionsWithDefaults instantiates a new ChatPermissions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChatPermissionsWithDefaults() *ChatPermissions {
	this := ChatPermissions{}
	var controls bool = true
	this.Controls = &controls
	var systemPrompt bool = true
	this.SystemPrompt = &systemPrompt
	var fileUpload bool = true
	this.FileUpload = &fileUpload
	var delete bool = true
	this.Delete = &delete
	var edit bool = true
	this.Edit = &edit
	var share bool = true
	this.Share = &share
	var export bool = true
	this.Export = &export
	var stt bool = true
	this.Stt = &stt
	var tts bool = true
	this.Tts = &tts
	var call bool = true
	this.Call = &call
	var multipleModels bool = true
	this.MultipleModels = &multipleModels
	var temporary bool = true
	this.Temporary = &temporary
	var temporaryEnforced bool = false
	this.TemporaryEnforced = &temporaryEnforced
	return &this
}

// GetControls returns the Controls field value if set, zero value otherwise.
func (o *ChatPermissions) GetControls() bool {
	if o == nil || IsNil(o.Controls) {
		var ret bool
		return ret
	}
	return *o.Controls
}

// GetControlsOk returns a tuple with the Controls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatPermissions) GetControlsOk() (*bool, bool) {
	if o == nil || IsNil(o.Controls) {
		return nil, false
	}
	return o.Controls, true
}

// HasControls returns a boolean if a field has been set.
func (o *ChatPermissions) HasControls() bool {
	if o != nil && !IsNil(o.Controls) {
		return true
	}

	return false
}

// SetControls gets a reference to the given bool and assigns it to the Controls field.
func (o *ChatPermissions) SetControls(v bool) {
	o.Controls = &v
}

// GetSystemPrompt returns the SystemPrompt field value if set, zero value otherwise.
func (o *ChatPermissions) GetSystemPrompt() bool {
	if o == nil || IsNil(o.SystemPrompt) {
		var ret bool
		return ret
	}
	return *o.SystemPrompt
}

// GetSystemPromptOk returns a tuple with the SystemPrompt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatPermissions) GetSystemPromptOk() (*bool, bool) {
	if o == nil || IsNil(o.SystemPrompt) {
		return nil, false
	}
	return o.SystemPrompt, true
}

// HasSystemPrompt returns a boolean if a field has been set.
func (o *ChatPermissions) HasSystemPrompt() bool {
	if o != nil && !IsNil(o.SystemPrompt) {
		return true
	}

	return false
}

// SetSystemPrompt gets a reference to the given bool and assigns it to the SystemPrompt field.
func (o *ChatPermissions) SetSystemPrompt(v bool) {
	o.SystemPrompt = &v
}

// GetFileUpload returns the FileUpload field value if set, zero value otherwise.
func (o *ChatPermissions) GetFileUpload() bool {
	if o == nil || IsNil(o.FileUpload) {
		var ret bool
		return ret
	}
	return *o.FileUpload
}

// GetFileUploadOk returns a tuple with the FileUpload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatPermissions) GetFileUploadOk() (*bool, bool) {
	if o == nil || IsNil(o.FileUpload) {
		return nil, false
	}
	return o.FileUpload, true
}

// HasFileUpload returns a boolean if a field has been set.
func (o *ChatPermissions) HasFileUpload() bool {
	if o != nil && !IsNil(o.FileUpload) {
		return true
	}

	return false
}

// SetFileUpload gets a reference to the given bool and assigns it to the FileUpload field.
func (o *ChatPermissions) SetFileUpload(v bool) {
	o.FileUpload = &v
}

// GetDelete returns the Delete field value if set, zero value otherwise.
func (o *ChatPermissions) GetDelete() bool {
	if o == nil || IsNil(o.Delete) {
		var ret bool
		return ret
	}
	return *o.Delete
}

// GetDeleteOk returns a tuple with the Delete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatPermissions) GetDeleteOk() (*bool, bool) {
	if o == nil || IsNil(o.Delete) {
		return nil, false
	}
	return o.Delete, true
}

// HasDelete returns a boolean if a field has been set.
func (o *ChatPermissions) HasDelete() bool {
	if o != nil && !IsNil(o.Delete) {
		return true
	}

	return false
}

// SetDelete gets a reference to the given bool and assigns it to the Delete field.
func (o *ChatPermissions) SetDelete(v bool) {
	o.Delete = &v
}

// GetEdit returns the Edit field value if set, zero value otherwise.
func (o *ChatPermissions) GetEdit() bool {
	if o == nil || IsNil(o.Edit) {
		var ret bool
		return ret
	}
	return *o.Edit
}

// GetEditOk returns a tuple with the Edit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatPermissions) GetEditOk() (*bool, bool) {
	if o == nil || IsNil(o.Edit) {
		return nil, false
	}
	return o.Edit, true
}

// HasEdit returns a boolean if a field has been set.
func (o *ChatPermissions) HasEdit() bool {
	if o != nil && !IsNil(o.Edit) {
		return true
	}

	return false
}

// SetEdit gets a reference to the given bool and assigns it to the Edit field.
func (o *ChatPermissions) SetEdit(v bool) {
	o.Edit = &v
}

// GetShare returns the Share field value if set, zero value otherwise.
func (o *ChatPermissions) GetShare() bool {
	if o == nil || IsNil(o.Share) {
		var ret bool
		return ret
	}
	return *o.Share
}

// GetShareOk returns a tuple with the Share field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatPermissions) GetShareOk() (*bool, bool) {
	if o == nil || IsNil(o.Share) {
		return nil, false
	}
	return o.Share, true
}

// HasShare returns a boolean if a field has been set.
func (o *ChatPermissions) HasShare() bool {
	if o != nil && !IsNil(o.Share) {
		return true
	}

	return false
}

// SetShare gets a reference to the given bool and assigns it to the Share field.
func (o *ChatPermissions) SetShare(v bool) {
	o.Share = &v
}

// GetExport returns the Export field value if set, zero value otherwise.
func (o *ChatPermissions) GetExport() bool {
	if o == nil || IsNil(o.Export) {
		var ret bool
		return ret
	}
	return *o.Export
}

// GetExportOk returns a tuple with the Export field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatPermissions) GetExportOk() (*bool, bool) {
	if o == nil || IsNil(o.Export) {
		return nil, false
	}
	return o.Export, true
}

// HasExport returns a boolean if a field has been set.
func (o *ChatPermissions) HasExport() bool {
	if o != nil && !IsNil(o.Export) {
		return true
	}

	return false
}

// SetExport gets a reference to the given bool and assigns it to the Export field.
func (o *ChatPermissions) SetExport(v bool) {
	o.Export = &v
}

// GetStt returns the Stt field value if set, zero value otherwise.
func (o *ChatPermissions) GetStt() bool {
	if o == nil || IsNil(o.Stt) {
		var ret bool
		return ret
	}
	return *o.Stt
}

// GetSttOk returns a tuple with the Stt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatPermissions) GetSttOk() (*bool, bool) {
	if o == nil || IsNil(o.Stt) {
		return nil, false
	}
	return o.Stt, true
}

// HasStt returns a boolean if a field has been set.
func (o *ChatPermissions) HasStt() bool {
	if o != nil && !IsNil(o.Stt) {
		return true
	}

	return false
}

// SetStt gets a reference to the given bool and assigns it to the Stt field.
func (o *ChatPermissions) SetStt(v bool) {
	o.Stt = &v
}

// GetTts returns the Tts field value if set, zero value otherwise.
func (o *ChatPermissions) GetTts() bool {
	if o == nil || IsNil(o.Tts) {
		var ret bool
		return ret
	}
	return *o.Tts
}

// GetTtsOk returns a tuple with the Tts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatPermissions) GetTtsOk() (*bool, bool) {
	if o == nil || IsNil(o.Tts) {
		return nil, false
	}
	return o.Tts, true
}

// HasTts returns a boolean if a field has been set.
func (o *ChatPermissions) HasTts() bool {
	if o != nil && !IsNil(o.Tts) {
		return true
	}

	return false
}

// SetTts gets a reference to the given bool and assigns it to the Tts field.
func (o *ChatPermissions) SetTts(v bool) {
	o.Tts = &v
}

// GetCall returns the Call field value if set, zero value otherwise.
func (o *ChatPermissions) GetCall() bool {
	if o == nil || IsNil(o.Call) {
		var ret bool
		return ret
	}
	return *o.Call
}

// GetCallOk returns a tuple with the Call field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatPermissions) GetCallOk() (*bool, bool) {
	if o == nil || IsNil(o.Call) {
		return nil, false
	}
	return o.Call, true
}

// HasCall returns a boolean if a field has been set.
func (o *ChatPermissions) HasCall() bool {
	if o != nil && !IsNil(o.Call) {
		return true
	}

	return false
}

// SetCall gets a reference to the given bool and assigns it to the Call field.
func (o *ChatPermissions) SetCall(v bool) {
	o.Call = &v
}

// GetMultipleModels returns the MultipleModels field value if set, zero value otherwise.
func (o *ChatPermissions) GetMultipleModels() bool {
	if o == nil || IsNil(o.MultipleModels) {
		var ret bool
		return ret
	}
	return *o.MultipleModels
}

// GetMultipleModelsOk returns a tuple with the MultipleModels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatPermissions) GetMultipleModelsOk() (*bool, bool) {
	if o == nil || IsNil(o.MultipleModels) {
		return nil, false
	}
	return o.MultipleModels, true
}

// HasMultipleModels returns a boolean if a field has been set.
func (o *ChatPermissions) HasMultipleModels() bool {
	if o != nil && !IsNil(o.MultipleModels) {
		return true
	}

	return false
}

// SetMultipleModels gets a reference to the given bool and assigns it to the MultipleModels field.
func (o *ChatPermissions) SetMultipleModels(v bool) {
	o.MultipleModels = &v
}

// GetTemporary returns the Temporary field value if set, zero value otherwise.
func (o *ChatPermissions) GetTemporary() bool {
	if o == nil || IsNil(o.Temporary) {
		var ret bool
		return ret
	}
	return *o.Temporary
}

// GetTemporaryOk returns a tuple with the Temporary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatPermissions) GetTemporaryOk() (*bool, bool) {
	if o == nil || IsNil(o.Temporary) {
		return nil, false
	}
	return o.Temporary, true
}

// HasTemporary returns a boolean if a field has been set.
func (o *ChatPermissions) HasTemporary() bool {
	if o != nil && !IsNil(o.Temporary) {
		return true
	}

	return false
}

// SetTemporary gets a reference to the given bool and assigns it to the Temporary field.
func (o *ChatPermissions) SetTemporary(v bool) {
	o.Temporary = &v
}

// GetTemporaryEnforced returns the TemporaryEnforced field value if set, zero value otherwise.
func (o *ChatPermissions) GetTemporaryEnforced() bool {
	if o == nil || IsNil(o.TemporaryEnforced) {
		var ret bool
		return ret
	}
	return *o.TemporaryEnforced
}

// GetTemporaryEnforcedOk returns a tuple with the TemporaryEnforced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatPermissions) GetTemporaryEnforcedOk() (*bool, bool) {
	if o == nil || IsNil(o.TemporaryEnforced) {
		return nil, false
	}
	return o.TemporaryEnforced, true
}

// HasTemporaryEnforced returns a boolean if a field has been set.
func (o *ChatPermissions) HasTemporaryEnforced() bool {
	if o != nil && !IsNil(o.TemporaryEnforced) {
		return true
	}

	return false
}

// SetTemporaryEnforced gets a reference to the given bool and assigns it to the TemporaryEnforced field.
func (o *ChatPermissions) SetTemporaryEnforced(v bool) {
	o.TemporaryEnforced = &v
}

func (o ChatPermissions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChatPermissions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Controls) {
		toSerialize["controls"] = o.Controls
	}
	if !IsNil(o.SystemPrompt) {
		toSerialize["system_prompt"] = o.SystemPrompt
	}
	if !IsNil(o.FileUpload) {
		toSerialize["file_upload"] = o.FileUpload
	}
	if !IsNil(o.Delete) {
		toSerialize["delete"] = o.Delete
	}
	if !IsNil(o.Edit) {
		toSerialize["edit"] = o.Edit
	}
	if !IsNil(o.Share) {
		toSerialize["share"] = o.Share
	}
	if !IsNil(o.Export) {
		toSerialize["export"] = o.Export
	}
	if !IsNil(o.Stt) {
		toSerialize["stt"] = o.Stt
	}
	if !IsNil(o.Tts) {
		toSerialize["tts"] = o.Tts
	}
	if !IsNil(o.Call) {
		toSerialize["call"] = o.Call
	}
	if !IsNil(o.MultipleModels) {
		toSerialize["multiple_models"] = o.MultipleModels
	}
	if !IsNil(o.Temporary) {
		toSerialize["temporary"] = o.Temporary
	}
	if !IsNil(o.TemporaryEnforced) {
		toSerialize["temporary_enforced"] = o.TemporaryEnforced
	}
	return toSerialize, nil
}

type NullableChatPermissions struct {
	value *ChatPermissions
	isSet bool
}

func (v NullableChatPermissions) Get() *ChatPermissions {
	return v.value
}

func (v *NullableChatPermissions) Set(val *ChatPermissions) {
	v.value = val
	v.isSet = true
}

func (v NullableChatPermissions) IsSet() bool {
	return v.isSet
}

func (v *NullableChatPermissions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChatPermissions(val *ChatPermissions) *NullableChatPermissions {
	return &NullableChatPermissions{value: val, isSet: true}
}

func (v NullableChatPermissions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChatPermissions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


