/*
Open WebUI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openwebui-go-sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SyncFunctionsForm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SyncFunctionsForm{}

// SyncFunctionsForm struct for SyncFunctionsForm
type SyncFunctionsForm struct {
	Id string `json:"id"`
	Name string `json:"name"`
	Content string `json:"content"`
	Meta FunctionMeta `json:"meta"`
	Functions []FunctionModel `json:"functions,omitempty"`
}

type _SyncFunctionsForm SyncFunctionsForm

// NewSyncFunctionsForm instantiates a new SyncFunctionsForm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSyncFunctionsForm(id string, name string, content string, meta FunctionMeta) *SyncFunctionsForm {
	this := SyncFunctionsForm{}
	this.Id = id
	this.Name = name
	this.Content = content
	this.Meta = meta
	return &this
}

// NewSyncFunctionsFormWithDefaults instantiates a new SyncFunctionsForm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSyncFunctionsFormWithDefaults() *SyncFunctionsForm {
	this := SyncFunctionsForm{}
	return &this
}

// GetId returns the Id field value
func (o *SyncFunctionsForm) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SyncFunctionsForm) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SyncFunctionsForm) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *SyncFunctionsForm) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SyncFunctionsForm) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SyncFunctionsForm) SetName(v string) {
	o.Name = v
}

// GetContent returns the Content field value
func (o *SyncFunctionsForm) GetContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *SyncFunctionsForm) GetContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *SyncFunctionsForm) SetContent(v string) {
	o.Content = v
}

// GetMeta returns the Meta field value
func (o *SyncFunctionsForm) GetMeta() FunctionMeta {
	if o == nil {
		var ret FunctionMeta
		return ret
	}

	return o.Meta
}

// GetMetaOk returns a tuple with the Meta field value
// and a boolean to check if the value has been set.
func (o *SyncFunctionsForm) GetMetaOk() (*FunctionMeta, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Meta, true
}

// SetMeta sets field value
func (o *SyncFunctionsForm) SetMeta(v FunctionMeta) {
	o.Meta = v
}

// GetFunctions returns the Functions field value if set, zero value otherwise.
func (o *SyncFunctionsForm) GetFunctions() []FunctionModel {
	if o == nil || IsNil(o.Functions) {
		var ret []FunctionModel
		return ret
	}
	return o.Functions
}

// GetFunctionsOk returns a tuple with the Functions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncFunctionsForm) GetFunctionsOk() ([]FunctionModel, bool) {
	if o == nil || IsNil(o.Functions) {
		return nil, false
	}
	return o.Functions, true
}

// HasFunctions returns a boolean if a field has been set.
func (o *SyncFunctionsForm) HasFunctions() bool {
	if o != nil && !IsNil(o.Functions) {
		return true
	}

	return false
}

// SetFunctions gets a reference to the given []FunctionModel and assigns it to the Functions field.
func (o *SyncFunctionsForm) SetFunctions(v []FunctionModel) {
	o.Functions = v
}

func (o SyncFunctionsForm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SyncFunctionsForm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["content"] = o.Content
	toSerialize["meta"] = o.Meta
	if !IsNil(o.Functions) {
		toSerialize["functions"] = o.Functions
	}
	return toSerialize, nil
}

func (o *SyncFunctionsForm) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"content",
		"meta",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSyncFunctionsForm := _SyncFunctionsForm{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSyncFunctionsForm)

	if err != nil {
		return err
	}

	*o = SyncFunctionsForm(varSyncFunctionsForm)

	return err
}

type NullableSyncFunctionsForm struct {
	value *SyncFunctionsForm
	isSet bool
}

func (v NullableSyncFunctionsForm) Get() *SyncFunctionsForm {
	return v.value
}

func (v *NullableSyncFunctionsForm) Set(val *SyncFunctionsForm) {
	v.value = val
	v.isSet = true
}

func (v NullableSyncFunctionsForm) IsSet() bool {
	return v.isSet
}

func (v *NullableSyncFunctionsForm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSyncFunctionsForm(val *SyncFunctionsForm) *NullableSyncFunctionsForm {
	return &NullableSyncFunctionsForm{value: val, isSet: true}
}

func (v NullableSyncFunctionsForm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSyncFunctionsForm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


