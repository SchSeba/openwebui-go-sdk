/*
Open WebUI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UserIdsForm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserIdsForm{}

// UserIdsForm struct for UserIdsForm
type UserIdsForm struct {
	UserIds []string `json:"user_ids,omitempty"`
}

// NewUserIdsForm instantiates a new UserIdsForm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserIdsForm() *UserIdsForm {
	this := UserIdsForm{}
	return &this
}

// NewUserIdsFormWithDefaults instantiates a new UserIdsForm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserIdsFormWithDefaults() *UserIdsForm {
	this := UserIdsForm{}
	return &this
}

// GetUserIds returns the UserIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserIdsForm) GetUserIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.UserIds
}

// GetUserIdsOk returns a tuple with the UserIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserIdsForm) GetUserIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.UserIds) {
		return nil, false
	}
	return o.UserIds, true
}

// HasUserIds returns a boolean if a field has been set.
func (o *UserIdsForm) HasUserIds() bool {
	if o != nil && !IsNil(o.UserIds) {
		return true
	}

	return false
}

// SetUserIds gets a reference to the given []string and assigns it to the UserIds field.
func (o *UserIdsForm) SetUserIds(v []string) {
	o.UserIds = v
}

func (o UserIdsForm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserIdsForm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.UserIds != nil {
		toSerialize["user_ids"] = o.UserIds
	}
	return toSerialize, nil
}

type NullableUserIdsForm struct {
	value *UserIdsForm
	isSet bool
}

func (v NullableUserIdsForm) Get() *UserIdsForm {
	return v.value
}

func (v *NullableUserIdsForm) Set(val *UserIdsForm) {
	v.value = val
	v.isSet = true
}

func (v NullableUserIdsForm) IsSet() bool {
	return v.isSet
}

func (v *NullableUserIdsForm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserIdsForm(val *UserIdsForm) *NullableUserIdsForm {
	return &NullableUserIdsForm{value: val, isSet: true}
}

func (v NullableUserIdsForm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserIdsForm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


