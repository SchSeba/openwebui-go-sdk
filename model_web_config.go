/*
Open WebUI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openwebui

import (
	"encoding/json"
)

// checks if the WebConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebConfig{}

// WebConfig struct for WebConfig
type WebConfig struct {
	ENABLE_WEB_SEARCH NullableBool `json:"ENABLE_WEB_SEARCH,omitempty"`
	WEB_SEARCH_ENGINE NullableString `json:"WEB_SEARCH_ENGINE,omitempty"`
	WEB_SEARCH_TRUST_ENV NullableBool `json:"WEB_SEARCH_TRUST_ENV,omitempty"`
	WEB_SEARCH_RESULT_COUNT NullableInt32 `json:"WEB_SEARCH_RESULT_COUNT,omitempty"`
	WEB_SEARCH_CONCURRENT_REQUESTS NullableInt32 `json:"WEB_SEARCH_CONCURRENT_REQUESTS,omitempty"`
	WEB_SEARCH_DOMAIN_FILTER_LIST []string `json:"WEB_SEARCH_DOMAIN_FILTER_LIST,omitempty"`
	BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL NullableBool `json:"BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL,omitempty"`
	BYPASS_WEB_SEARCH_WEB_LOADER NullableBool `json:"BYPASS_WEB_SEARCH_WEB_LOADER,omitempty"`
	SEARXNG_QUERY_URL NullableString `json:"SEARXNG_QUERY_URL,omitempty"`
	YACY_QUERY_URL NullableString `json:"YACY_QUERY_URL,omitempty"`
	YACY_USERNAME NullableString `json:"YACY_USERNAME,omitempty"`
	YACY_PASSWORD NullableString `json:"YACY_PASSWORD,omitempty"`
	GOOGLE_PSE_API_KEY NullableString `json:"GOOGLE_PSE_API_KEY,omitempty"`
	GOOGLE_PSE_ENGINE_ID NullableString `json:"GOOGLE_PSE_ENGINE_ID,omitempty"`
	BRAVE_SEARCH_API_KEY NullableString `json:"BRAVE_SEARCH_API_KEY,omitempty"`
	KAGI_SEARCH_API_KEY NullableString `json:"KAGI_SEARCH_API_KEY,omitempty"`
	MOJEEK_SEARCH_API_KEY NullableString `json:"MOJEEK_SEARCH_API_KEY,omitempty"`
	BOCHA_SEARCH_API_KEY NullableString `json:"BOCHA_SEARCH_API_KEY,omitempty"`
	SERPSTACK_API_KEY NullableString `json:"SERPSTACK_API_KEY,omitempty"`
	SERPSTACK_HTTPS NullableBool `json:"SERPSTACK_HTTPS,omitempty"`
	SERPER_API_KEY NullableString `json:"SERPER_API_KEY,omitempty"`
	SERPLY_API_KEY NullableString `json:"SERPLY_API_KEY,omitempty"`
	TAVILY_API_KEY NullableString `json:"TAVILY_API_KEY,omitempty"`
	SEARCHAPI_API_KEY NullableString `json:"SEARCHAPI_API_KEY,omitempty"`
	SEARCHAPI_ENGINE NullableString `json:"SEARCHAPI_ENGINE,omitempty"`
	SERPAPI_API_KEY NullableString `json:"SERPAPI_API_KEY,omitempty"`
	SERPAPI_ENGINE NullableString `json:"SERPAPI_ENGINE,omitempty"`
	JINA_API_KEY NullableString `json:"JINA_API_KEY,omitempty"`
	BINGSEARCHV7ENDPOINT NullableString `json:"BING_SEARCH_V7_ENDPOINT,omitempty"`
	BINGSEARCHV7SUBSCRIPTIONKEY NullableString `json:"BING_SEARCH_V7_SUBSCRIPTION_KEY,omitempty"`
	EXA_API_KEY NullableString `json:"EXA_API_KEY,omitempty"`
	PERPLEXITY_API_KEY NullableString `json:"PERPLEXITY_API_KEY,omitempty"`
	PERPLEXITY_MODEL NullableString `json:"PERPLEXITY_MODEL,omitempty"`
	PERPLEXITY_SEARCH_CONTEXT_USAGE NullableString `json:"PERPLEXITY_SEARCH_CONTEXT_USAGE,omitempty"`
	SOUGOU_API_SID NullableString `json:"SOUGOU_API_SID,omitempty"`
	SOUGOU_API_SK NullableString `json:"SOUGOU_API_SK,omitempty"`
	WEB_LOADER_ENGINE NullableString `json:"WEB_LOADER_ENGINE,omitempty"`
	ENABLE_WEB_LOADER_SSL_VERIFICATION NullableBool `json:"ENABLE_WEB_LOADER_SSL_VERIFICATION,omitempty"`
	PLAYWRIGHT_WS_URL NullableString `json:"PLAYWRIGHT_WS_URL,omitempty"`
	PLAYWRIGHT_TIMEOUT NullableInt32 `json:"PLAYWRIGHT_TIMEOUT,omitempty"`
	FIRECRAWL_API_KEY NullableString `json:"FIRECRAWL_API_KEY,omitempty"`
	FIRECRAWL_API_BASE_URL NullableString `json:"FIRECRAWL_API_BASE_URL,omitempty"`
	TAVILY_EXTRACT_DEPTH NullableString `json:"TAVILY_EXTRACT_DEPTH,omitempty"`
	EXTERNAL_WEB_SEARCH_URL NullableString `json:"EXTERNAL_WEB_SEARCH_URL,omitempty"`
	EXTERNAL_WEB_SEARCH_API_KEY NullableString `json:"EXTERNAL_WEB_SEARCH_API_KEY,omitempty"`
	EXTERNAL_WEB_LOADER_URL NullableString `json:"EXTERNAL_WEB_LOADER_URL,omitempty"`
	EXTERNAL_WEB_LOADER_API_KEY NullableString `json:"EXTERNAL_WEB_LOADER_API_KEY,omitempty"`
	YOUTUBE_LOADER_LANGUAGE []string `json:"YOUTUBE_LOADER_LANGUAGE,omitempty"`
	YOUTUBE_LOADER_PROXY_URL NullableString `json:"YOUTUBE_LOADER_PROXY_URL,omitempty"`
	YOUTUBE_LOADER_TRANSLATION NullableString `json:"YOUTUBE_LOADER_TRANSLATION,omitempty"`
}

// NewWebConfig instantiates a new WebConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebConfig() *WebConfig {
	this := WebConfig{}
	return &this
}

// NewWebConfigWithDefaults instantiates a new WebConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebConfigWithDefaults() *WebConfig {
	this := WebConfig{}
	return &this
}

// GetENABLE_WEB_SEARCH returns the ENABLE_WEB_SEARCH field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetENABLE_WEB_SEARCH() bool {
	if o == nil || IsNil(o.ENABLE_WEB_SEARCH.Get()) {
		var ret bool
		return ret
	}
	return *o.ENABLE_WEB_SEARCH.Get()
}

// GetENABLE_WEB_SEARCHOk returns a tuple with the ENABLE_WEB_SEARCH field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetENABLE_WEB_SEARCHOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ENABLE_WEB_SEARCH.Get(), o.ENABLE_WEB_SEARCH.IsSet()
}

// HasENABLE_WEB_SEARCH returns a boolean if a field has been set.
func (o *WebConfig) HasENABLE_WEB_SEARCH() bool {
	if o != nil && o.ENABLE_WEB_SEARCH.IsSet() {
		return true
	}

	return false
}

// SetENABLE_WEB_SEARCH gets a reference to the given NullableBool and assigns it to the ENABLE_WEB_SEARCH field.
func (o *WebConfig) SetENABLE_WEB_SEARCH(v bool) {
	o.ENABLE_WEB_SEARCH.Set(&v)
}
// SetENABLE_WEB_SEARCHNil sets the value for ENABLE_WEB_SEARCH to be an explicit nil
func (o *WebConfig) SetENABLE_WEB_SEARCHNil() {
	o.ENABLE_WEB_SEARCH.Set(nil)
}

// UnsetENABLE_WEB_SEARCH ensures that no value is present for ENABLE_WEB_SEARCH, not even an explicit nil
func (o *WebConfig) UnsetENABLE_WEB_SEARCH() {
	o.ENABLE_WEB_SEARCH.Unset()
}

// GetWEB_SEARCH_ENGINE returns the WEB_SEARCH_ENGINE field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetWEB_SEARCH_ENGINE() string {
	if o == nil || IsNil(o.WEB_SEARCH_ENGINE.Get()) {
		var ret string
		return ret
	}
	return *o.WEB_SEARCH_ENGINE.Get()
}

// GetWEB_SEARCH_ENGINEOk returns a tuple with the WEB_SEARCH_ENGINE field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetWEB_SEARCH_ENGINEOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WEB_SEARCH_ENGINE.Get(), o.WEB_SEARCH_ENGINE.IsSet()
}

// HasWEB_SEARCH_ENGINE returns a boolean if a field has been set.
func (o *WebConfig) HasWEB_SEARCH_ENGINE() bool {
	if o != nil && o.WEB_SEARCH_ENGINE.IsSet() {
		return true
	}

	return false
}

// SetWEB_SEARCH_ENGINE gets a reference to the given NullableString and assigns it to the WEB_SEARCH_ENGINE field.
func (o *WebConfig) SetWEB_SEARCH_ENGINE(v string) {
	o.WEB_SEARCH_ENGINE.Set(&v)
}
// SetWEB_SEARCH_ENGINENil sets the value for WEB_SEARCH_ENGINE to be an explicit nil
func (o *WebConfig) SetWEB_SEARCH_ENGINENil() {
	o.WEB_SEARCH_ENGINE.Set(nil)
}

// UnsetWEB_SEARCH_ENGINE ensures that no value is present for WEB_SEARCH_ENGINE, not even an explicit nil
func (o *WebConfig) UnsetWEB_SEARCH_ENGINE() {
	o.WEB_SEARCH_ENGINE.Unset()
}

// GetWEB_SEARCH_TRUST_ENV returns the WEB_SEARCH_TRUST_ENV field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetWEB_SEARCH_TRUST_ENV() bool {
	if o == nil || IsNil(o.WEB_SEARCH_TRUST_ENV.Get()) {
		var ret bool
		return ret
	}
	return *o.WEB_SEARCH_TRUST_ENV.Get()
}

// GetWEB_SEARCH_TRUST_ENVOk returns a tuple with the WEB_SEARCH_TRUST_ENV field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetWEB_SEARCH_TRUST_ENVOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.WEB_SEARCH_TRUST_ENV.Get(), o.WEB_SEARCH_TRUST_ENV.IsSet()
}

// HasWEB_SEARCH_TRUST_ENV returns a boolean if a field has been set.
func (o *WebConfig) HasWEB_SEARCH_TRUST_ENV() bool {
	if o != nil && o.WEB_SEARCH_TRUST_ENV.IsSet() {
		return true
	}

	return false
}

// SetWEB_SEARCH_TRUST_ENV gets a reference to the given NullableBool and assigns it to the WEB_SEARCH_TRUST_ENV field.
func (o *WebConfig) SetWEB_SEARCH_TRUST_ENV(v bool) {
	o.WEB_SEARCH_TRUST_ENV.Set(&v)
}
// SetWEB_SEARCH_TRUST_ENVNil sets the value for WEB_SEARCH_TRUST_ENV to be an explicit nil
func (o *WebConfig) SetWEB_SEARCH_TRUST_ENVNil() {
	o.WEB_SEARCH_TRUST_ENV.Set(nil)
}

// UnsetWEB_SEARCH_TRUST_ENV ensures that no value is present for WEB_SEARCH_TRUST_ENV, not even an explicit nil
func (o *WebConfig) UnsetWEB_SEARCH_TRUST_ENV() {
	o.WEB_SEARCH_TRUST_ENV.Unset()
}

// GetWEB_SEARCH_RESULT_COUNT returns the WEB_SEARCH_RESULT_COUNT field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetWEB_SEARCH_RESULT_COUNT() int32 {
	if o == nil || IsNil(o.WEB_SEARCH_RESULT_COUNT.Get()) {
		var ret int32
		return ret
	}
	return *o.WEB_SEARCH_RESULT_COUNT.Get()
}

// GetWEB_SEARCH_RESULT_COUNTOk returns a tuple with the WEB_SEARCH_RESULT_COUNT field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetWEB_SEARCH_RESULT_COUNTOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.WEB_SEARCH_RESULT_COUNT.Get(), o.WEB_SEARCH_RESULT_COUNT.IsSet()
}

// HasWEB_SEARCH_RESULT_COUNT returns a boolean if a field has been set.
func (o *WebConfig) HasWEB_SEARCH_RESULT_COUNT() bool {
	if o != nil && o.WEB_SEARCH_RESULT_COUNT.IsSet() {
		return true
	}

	return false
}

// SetWEB_SEARCH_RESULT_COUNT gets a reference to the given NullableInt32 and assigns it to the WEB_SEARCH_RESULT_COUNT field.
func (o *WebConfig) SetWEB_SEARCH_RESULT_COUNT(v int32) {
	o.WEB_SEARCH_RESULT_COUNT.Set(&v)
}
// SetWEB_SEARCH_RESULT_COUNTNil sets the value for WEB_SEARCH_RESULT_COUNT to be an explicit nil
func (o *WebConfig) SetWEB_SEARCH_RESULT_COUNTNil() {
	o.WEB_SEARCH_RESULT_COUNT.Set(nil)
}

// UnsetWEB_SEARCH_RESULT_COUNT ensures that no value is present for WEB_SEARCH_RESULT_COUNT, not even an explicit nil
func (o *WebConfig) UnsetWEB_SEARCH_RESULT_COUNT() {
	o.WEB_SEARCH_RESULT_COUNT.Unset()
}

// GetWEB_SEARCH_CONCURRENT_REQUESTS returns the WEB_SEARCH_CONCURRENT_REQUESTS field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetWEB_SEARCH_CONCURRENT_REQUESTS() int32 {
	if o == nil || IsNil(o.WEB_SEARCH_CONCURRENT_REQUESTS.Get()) {
		var ret int32
		return ret
	}
	return *o.WEB_SEARCH_CONCURRENT_REQUESTS.Get()
}

// GetWEB_SEARCH_CONCURRENT_REQUESTSOk returns a tuple with the WEB_SEARCH_CONCURRENT_REQUESTS field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetWEB_SEARCH_CONCURRENT_REQUESTSOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.WEB_SEARCH_CONCURRENT_REQUESTS.Get(), o.WEB_SEARCH_CONCURRENT_REQUESTS.IsSet()
}

// HasWEB_SEARCH_CONCURRENT_REQUESTS returns a boolean if a field has been set.
func (o *WebConfig) HasWEB_SEARCH_CONCURRENT_REQUESTS() bool {
	if o != nil && o.WEB_SEARCH_CONCURRENT_REQUESTS.IsSet() {
		return true
	}

	return false
}

// SetWEB_SEARCH_CONCURRENT_REQUESTS gets a reference to the given NullableInt32 and assigns it to the WEB_SEARCH_CONCURRENT_REQUESTS field.
func (o *WebConfig) SetWEB_SEARCH_CONCURRENT_REQUESTS(v int32) {
	o.WEB_SEARCH_CONCURRENT_REQUESTS.Set(&v)
}
// SetWEB_SEARCH_CONCURRENT_REQUESTSNil sets the value for WEB_SEARCH_CONCURRENT_REQUESTS to be an explicit nil
func (o *WebConfig) SetWEB_SEARCH_CONCURRENT_REQUESTSNil() {
	o.WEB_SEARCH_CONCURRENT_REQUESTS.Set(nil)
}

// UnsetWEB_SEARCH_CONCURRENT_REQUESTS ensures that no value is present for WEB_SEARCH_CONCURRENT_REQUESTS, not even an explicit nil
func (o *WebConfig) UnsetWEB_SEARCH_CONCURRENT_REQUESTS() {
	o.WEB_SEARCH_CONCURRENT_REQUESTS.Unset()
}

// GetWEB_SEARCH_DOMAIN_FILTER_LIST returns the WEB_SEARCH_DOMAIN_FILTER_LIST field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetWEB_SEARCH_DOMAIN_FILTER_LIST() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.WEB_SEARCH_DOMAIN_FILTER_LIST
}

// GetWEB_SEARCH_DOMAIN_FILTER_LISTOk returns a tuple with the WEB_SEARCH_DOMAIN_FILTER_LIST field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetWEB_SEARCH_DOMAIN_FILTER_LISTOk() ([]string, bool) {
	if o == nil || IsNil(o.WEB_SEARCH_DOMAIN_FILTER_LIST) {
		return nil, false
	}
	return o.WEB_SEARCH_DOMAIN_FILTER_LIST, true
}

// HasWEB_SEARCH_DOMAIN_FILTER_LIST returns a boolean if a field has been set.
func (o *WebConfig) HasWEB_SEARCH_DOMAIN_FILTER_LIST() bool {
	if o != nil && !IsNil(o.WEB_SEARCH_DOMAIN_FILTER_LIST) {
		return true
	}

	return false
}

// SetWEB_SEARCH_DOMAIN_FILTER_LIST gets a reference to the given []string and assigns it to the WEB_SEARCH_DOMAIN_FILTER_LIST field.
func (o *WebConfig) SetWEB_SEARCH_DOMAIN_FILTER_LIST(v []string) {
	o.WEB_SEARCH_DOMAIN_FILTER_LIST = v
}

// GetBYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL returns the BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetBYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL() bool {
	if o == nil || IsNil(o.BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL.Get()) {
		var ret bool
		return ret
	}
	return *o.BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL.Get()
}

// GetBYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVALOk returns a tuple with the BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetBYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVALOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL.Get(), o.BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL.IsSet()
}

// HasBYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL returns a boolean if a field has been set.
func (o *WebConfig) HasBYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL() bool {
	if o != nil && o.BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL.IsSet() {
		return true
	}

	return false
}

// SetBYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL gets a reference to the given NullableBool and assigns it to the BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL field.
func (o *WebConfig) SetBYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL(v bool) {
	o.BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL.Set(&v)
}
// SetBYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVALNil sets the value for BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL to be an explicit nil
func (o *WebConfig) SetBYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVALNil() {
	o.BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL.Set(nil)
}

// UnsetBYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL ensures that no value is present for BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL, not even an explicit nil
func (o *WebConfig) UnsetBYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL() {
	o.BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL.Unset()
}

// GetBYPASS_WEB_SEARCH_WEB_LOADER returns the BYPASS_WEB_SEARCH_WEB_LOADER field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetBYPASS_WEB_SEARCH_WEB_LOADER() bool {
	if o == nil || IsNil(o.BYPASS_WEB_SEARCH_WEB_LOADER.Get()) {
		var ret bool
		return ret
	}
	return *o.BYPASS_WEB_SEARCH_WEB_LOADER.Get()
}

// GetBYPASS_WEB_SEARCH_WEB_LOADEROk returns a tuple with the BYPASS_WEB_SEARCH_WEB_LOADER field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetBYPASS_WEB_SEARCH_WEB_LOADEROk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.BYPASS_WEB_SEARCH_WEB_LOADER.Get(), o.BYPASS_WEB_SEARCH_WEB_LOADER.IsSet()
}

// HasBYPASS_WEB_SEARCH_WEB_LOADER returns a boolean if a field has been set.
func (o *WebConfig) HasBYPASS_WEB_SEARCH_WEB_LOADER() bool {
	if o != nil && o.BYPASS_WEB_SEARCH_WEB_LOADER.IsSet() {
		return true
	}

	return false
}

// SetBYPASS_WEB_SEARCH_WEB_LOADER gets a reference to the given NullableBool and assigns it to the BYPASS_WEB_SEARCH_WEB_LOADER field.
func (o *WebConfig) SetBYPASS_WEB_SEARCH_WEB_LOADER(v bool) {
	o.BYPASS_WEB_SEARCH_WEB_LOADER.Set(&v)
}
// SetBYPASS_WEB_SEARCH_WEB_LOADERNil sets the value for BYPASS_WEB_SEARCH_WEB_LOADER to be an explicit nil
func (o *WebConfig) SetBYPASS_WEB_SEARCH_WEB_LOADERNil() {
	o.BYPASS_WEB_SEARCH_WEB_LOADER.Set(nil)
}

// UnsetBYPASS_WEB_SEARCH_WEB_LOADER ensures that no value is present for BYPASS_WEB_SEARCH_WEB_LOADER, not even an explicit nil
func (o *WebConfig) UnsetBYPASS_WEB_SEARCH_WEB_LOADER() {
	o.BYPASS_WEB_SEARCH_WEB_LOADER.Unset()
}

// GetSEARXNG_QUERY_URL returns the SEARXNG_QUERY_URL field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetSEARXNG_QUERY_URL() string {
	if o == nil || IsNil(o.SEARXNG_QUERY_URL.Get()) {
		var ret string
		return ret
	}
	return *o.SEARXNG_QUERY_URL.Get()
}

// GetSEARXNG_QUERY_URLOk returns a tuple with the SEARXNG_QUERY_URL field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetSEARXNG_QUERY_URLOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SEARXNG_QUERY_URL.Get(), o.SEARXNG_QUERY_URL.IsSet()
}

// HasSEARXNG_QUERY_URL returns a boolean if a field has been set.
func (o *WebConfig) HasSEARXNG_QUERY_URL() bool {
	if o != nil && o.SEARXNG_QUERY_URL.IsSet() {
		return true
	}

	return false
}

// SetSEARXNG_QUERY_URL gets a reference to the given NullableString and assigns it to the SEARXNG_QUERY_URL field.
func (o *WebConfig) SetSEARXNG_QUERY_URL(v string) {
	o.SEARXNG_QUERY_URL.Set(&v)
}
// SetSEARXNG_QUERY_URLNil sets the value for SEARXNG_QUERY_URL to be an explicit nil
func (o *WebConfig) SetSEARXNG_QUERY_URLNil() {
	o.SEARXNG_QUERY_URL.Set(nil)
}

// UnsetSEARXNG_QUERY_URL ensures that no value is present for SEARXNG_QUERY_URL, not even an explicit nil
func (o *WebConfig) UnsetSEARXNG_QUERY_URL() {
	o.SEARXNG_QUERY_URL.Unset()
}

// GetYACY_QUERY_URL returns the YACY_QUERY_URL field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetYACY_QUERY_URL() string {
	if o == nil || IsNil(o.YACY_QUERY_URL.Get()) {
		var ret string
		return ret
	}
	return *o.YACY_QUERY_URL.Get()
}

// GetYACY_QUERY_URLOk returns a tuple with the YACY_QUERY_URL field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetYACY_QUERY_URLOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.YACY_QUERY_URL.Get(), o.YACY_QUERY_URL.IsSet()
}

// HasYACY_QUERY_URL returns a boolean if a field has been set.
func (o *WebConfig) HasYACY_QUERY_URL() bool {
	if o != nil && o.YACY_QUERY_URL.IsSet() {
		return true
	}

	return false
}

// SetYACY_QUERY_URL gets a reference to the given NullableString and assigns it to the YACY_QUERY_URL field.
func (o *WebConfig) SetYACY_QUERY_URL(v string) {
	o.YACY_QUERY_URL.Set(&v)
}
// SetYACY_QUERY_URLNil sets the value for YACY_QUERY_URL to be an explicit nil
func (o *WebConfig) SetYACY_QUERY_URLNil() {
	o.YACY_QUERY_URL.Set(nil)
}

// UnsetYACY_QUERY_URL ensures that no value is present for YACY_QUERY_URL, not even an explicit nil
func (o *WebConfig) UnsetYACY_QUERY_URL() {
	o.YACY_QUERY_URL.Unset()
}

// GetYACY_USERNAME returns the YACY_USERNAME field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetYACY_USERNAME() string {
	if o == nil || IsNil(o.YACY_USERNAME.Get()) {
		var ret string
		return ret
	}
	return *o.YACY_USERNAME.Get()
}

// GetYACY_USERNAMEOk returns a tuple with the YACY_USERNAME field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetYACY_USERNAMEOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.YACY_USERNAME.Get(), o.YACY_USERNAME.IsSet()
}

// HasYACY_USERNAME returns a boolean if a field has been set.
func (o *WebConfig) HasYACY_USERNAME() bool {
	if o != nil && o.YACY_USERNAME.IsSet() {
		return true
	}

	return false
}

// SetYACY_USERNAME gets a reference to the given NullableString and assigns it to the YACY_USERNAME field.
func (o *WebConfig) SetYACY_USERNAME(v string) {
	o.YACY_USERNAME.Set(&v)
}
// SetYACY_USERNAMENil sets the value for YACY_USERNAME to be an explicit nil
func (o *WebConfig) SetYACY_USERNAMENil() {
	o.YACY_USERNAME.Set(nil)
}

// UnsetYACY_USERNAME ensures that no value is present for YACY_USERNAME, not even an explicit nil
func (o *WebConfig) UnsetYACY_USERNAME() {
	o.YACY_USERNAME.Unset()
}

// GetYACY_PASSWORD returns the YACY_PASSWORD field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetYACY_PASSWORD() string {
	if o == nil || IsNil(o.YACY_PASSWORD.Get()) {
		var ret string
		return ret
	}
	return *o.YACY_PASSWORD.Get()
}

// GetYACY_PASSWORDOk returns a tuple with the YACY_PASSWORD field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetYACY_PASSWORDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.YACY_PASSWORD.Get(), o.YACY_PASSWORD.IsSet()
}

// HasYACY_PASSWORD returns a boolean if a field has been set.
func (o *WebConfig) HasYACY_PASSWORD() bool {
	if o != nil && o.YACY_PASSWORD.IsSet() {
		return true
	}

	return false
}

// SetYACY_PASSWORD gets a reference to the given NullableString and assigns it to the YACY_PASSWORD field.
func (o *WebConfig) SetYACY_PASSWORD(v string) {
	o.YACY_PASSWORD.Set(&v)
}
// SetYACY_PASSWORDNil sets the value for YACY_PASSWORD to be an explicit nil
func (o *WebConfig) SetYACY_PASSWORDNil() {
	o.YACY_PASSWORD.Set(nil)
}

// UnsetYACY_PASSWORD ensures that no value is present for YACY_PASSWORD, not even an explicit nil
func (o *WebConfig) UnsetYACY_PASSWORD() {
	o.YACY_PASSWORD.Unset()
}

// GetGOOGLE_PSE_API_KEY returns the GOOGLE_PSE_API_KEY field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetGOOGLE_PSE_API_KEY() string {
	if o == nil || IsNil(o.GOOGLE_PSE_API_KEY.Get()) {
		var ret string
		return ret
	}
	return *o.GOOGLE_PSE_API_KEY.Get()
}

// GetGOOGLE_PSE_API_KEYOk returns a tuple with the GOOGLE_PSE_API_KEY field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetGOOGLE_PSE_API_KEYOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GOOGLE_PSE_API_KEY.Get(), o.GOOGLE_PSE_API_KEY.IsSet()
}

// HasGOOGLE_PSE_API_KEY returns a boolean if a field has been set.
func (o *WebConfig) HasGOOGLE_PSE_API_KEY() bool {
	if o != nil && o.GOOGLE_PSE_API_KEY.IsSet() {
		return true
	}

	return false
}

// SetGOOGLE_PSE_API_KEY gets a reference to the given NullableString and assigns it to the GOOGLE_PSE_API_KEY field.
func (o *WebConfig) SetGOOGLE_PSE_API_KEY(v string) {
	o.GOOGLE_PSE_API_KEY.Set(&v)
}
// SetGOOGLE_PSE_API_KEYNil sets the value for GOOGLE_PSE_API_KEY to be an explicit nil
func (o *WebConfig) SetGOOGLE_PSE_API_KEYNil() {
	o.GOOGLE_PSE_API_KEY.Set(nil)
}

// UnsetGOOGLE_PSE_API_KEY ensures that no value is present for GOOGLE_PSE_API_KEY, not even an explicit nil
func (o *WebConfig) UnsetGOOGLE_PSE_API_KEY() {
	o.GOOGLE_PSE_API_KEY.Unset()
}

// GetGOOGLE_PSE_ENGINE_ID returns the GOOGLE_PSE_ENGINE_ID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetGOOGLE_PSE_ENGINE_ID() string {
	if o == nil || IsNil(o.GOOGLE_PSE_ENGINE_ID.Get()) {
		var ret string
		return ret
	}
	return *o.GOOGLE_PSE_ENGINE_ID.Get()
}

// GetGOOGLE_PSE_ENGINE_IDOk returns a tuple with the GOOGLE_PSE_ENGINE_ID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetGOOGLE_PSE_ENGINE_IDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GOOGLE_PSE_ENGINE_ID.Get(), o.GOOGLE_PSE_ENGINE_ID.IsSet()
}

// HasGOOGLE_PSE_ENGINE_ID returns a boolean if a field has been set.
func (o *WebConfig) HasGOOGLE_PSE_ENGINE_ID() bool {
	if o != nil && o.GOOGLE_PSE_ENGINE_ID.IsSet() {
		return true
	}

	return false
}

// SetGOOGLE_PSE_ENGINE_ID gets a reference to the given NullableString and assigns it to the GOOGLE_PSE_ENGINE_ID field.
func (o *WebConfig) SetGOOGLE_PSE_ENGINE_ID(v string) {
	o.GOOGLE_PSE_ENGINE_ID.Set(&v)
}
// SetGOOGLE_PSE_ENGINE_IDNil sets the value for GOOGLE_PSE_ENGINE_ID to be an explicit nil
func (o *WebConfig) SetGOOGLE_PSE_ENGINE_IDNil() {
	o.GOOGLE_PSE_ENGINE_ID.Set(nil)
}

// UnsetGOOGLE_PSE_ENGINE_ID ensures that no value is present for GOOGLE_PSE_ENGINE_ID, not even an explicit nil
func (o *WebConfig) UnsetGOOGLE_PSE_ENGINE_ID() {
	o.GOOGLE_PSE_ENGINE_ID.Unset()
}

// GetBRAVE_SEARCH_API_KEY returns the BRAVE_SEARCH_API_KEY field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetBRAVE_SEARCH_API_KEY() string {
	if o == nil || IsNil(o.BRAVE_SEARCH_API_KEY.Get()) {
		var ret string
		return ret
	}
	return *o.BRAVE_SEARCH_API_KEY.Get()
}

// GetBRAVE_SEARCH_API_KEYOk returns a tuple with the BRAVE_SEARCH_API_KEY field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetBRAVE_SEARCH_API_KEYOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BRAVE_SEARCH_API_KEY.Get(), o.BRAVE_SEARCH_API_KEY.IsSet()
}

// HasBRAVE_SEARCH_API_KEY returns a boolean if a field has been set.
func (o *WebConfig) HasBRAVE_SEARCH_API_KEY() bool {
	if o != nil && o.BRAVE_SEARCH_API_KEY.IsSet() {
		return true
	}

	return false
}

// SetBRAVE_SEARCH_API_KEY gets a reference to the given NullableString and assigns it to the BRAVE_SEARCH_API_KEY field.
func (o *WebConfig) SetBRAVE_SEARCH_API_KEY(v string) {
	o.BRAVE_SEARCH_API_KEY.Set(&v)
}
// SetBRAVE_SEARCH_API_KEYNil sets the value for BRAVE_SEARCH_API_KEY to be an explicit nil
func (o *WebConfig) SetBRAVE_SEARCH_API_KEYNil() {
	o.BRAVE_SEARCH_API_KEY.Set(nil)
}

// UnsetBRAVE_SEARCH_API_KEY ensures that no value is present for BRAVE_SEARCH_API_KEY, not even an explicit nil
func (o *WebConfig) UnsetBRAVE_SEARCH_API_KEY() {
	o.BRAVE_SEARCH_API_KEY.Unset()
}

// GetKAGI_SEARCH_API_KEY returns the KAGI_SEARCH_API_KEY field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetKAGI_SEARCH_API_KEY() string {
	if o == nil || IsNil(o.KAGI_SEARCH_API_KEY.Get()) {
		var ret string
		return ret
	}
	return *o.KAGI_SEARCH_API_KEY.Get()
}

// GetKAGI_SEARCH_API_KEYOk returns a tuple with the KAGI_SEARCH_API_KEY field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetKAGI_SEARCH_API_KEYOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.KAGI_SEARCH_API_KEY.Get(), o.KAGI_SEARCH_API_KEY.IsSet()
}

// HasKAGI_SEARCH_API_KEY returns a boolean if a field has been set.
func (o *WebConfig) HasKAGI_SEARCH_API_KEY() bool {
	if o != nil && o.KAGI_SEARCH_API_KEY.IsSet() {
		return true
	}

	return false
}

// SetKAGI_SEARCH_API_KEY gets a reference to the given NullableString and assigns it to the KAGI_SEARCH_API_KEY field.
func (o *WebConfig) SetKAGI_SEARCH_API_KEY(v string) {
	o.KAGI_SEARCH_API_KEY.Set(&v)
}
// SetKAGI_SEARCH_API_KEYNil sets the value for KAGI_SEARCH_API_KEY to be an explicit nil
func (o *WebConfig) SetKAGI_SEARCH_API_KEYNil() {
	o.KAGI_SEARCH_API_KEY.Set(nil)
}

// UnsetKAGI_SEARCH_API_KEY ensures that no value is present for KAGI_SEARCH_API_KEY, not even an explicit nil
func (o *WebConfig) UnsetKAGI_SEARCH_API_KEY() {
	o.KAGI_SEARCH_API_KEY.Unset()
}

// GetMOJEEK_SEARCH_API_KEY returns the MOJEEK_SEARCH_API_KEY field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetMOJEEK_SEARCH_API_KEY() string {
	if o == nil || IsNil(o.MOJEEK_SEARCH_API_KEY.Get()) {
		var ret string
		return ret
	}
	return *o.MOJEEK_SEARCH_API_KEY.Get()
}

// GetMOJEEK_SEARCH_API_KEYOk returns a tuple with the MOJEEK_SEARCH_API_KEY field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetMOJEEK_SEARCH_API_KEYOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MOJEEK_SEARCH_API_KEY.Get(), o.MOJEEK_SEARCH_API_KEY.IsSet()
}

// HasMOJEEK_SEARCH_API_KEY returns a boolean if a field has been set.
func (o *WebConfig) HasMOJEEK_SEARCH_API_KEY() bool {
	if o != nil && o.MOJEEK_SEARCH_API_KEY.IsSet() {
		return true
	}

	return false
}

// SetMOJEEK_SEARCH_API_KEY gets a reference to the given NullableString and assigns it to the MOJEEK_SEARCH_API_KEY field.
func (o *WebConfig) SetMOJEEK_SEARCH_API_KEY(v string) {
	o.MOJEEK_SEARCH_API_KEY.Set(&v)
}
// SetMOJEEK_SEARCH_API_KEYNil sets the value for MOJEEK_SEARCH_API_KEY to be an explicit nil
func (o *WebConfig) SetMOJEEK_SEARCH_API_KEYNil() {
	o.MOJEEK_SEARCH_API_KEY.Set(nil)
}

// UnsetMOJEEK_SEARCH_API_KEY ensures that no value is present for MOJEEK_SEARCH_API_KEY, not even an explicit nil
func (o *WebConfig) UnsetMOJEEK_SEARCH_API_KEY() {
	o.MOJEEK_SEARCH_API_KEY.Unset()
}

// GetBOCHA_SEARCH_API_KEY returns the BOCHA_SEARCH_API_KEY field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetBOCHA_SEARCH_API_KEY() string {
	if o == nil || IsNil(o.BOCHA_SEARCH_API_KEY.Get()) {
		var ret string
		return ret
	}
	return *o.BOCHA_SEARCH_API_KEY.Get()
}

// GetBOCHA_SEARCH_API_KEYOk returns a tuple with the BOCHA_SEARCH_API_KEY field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetBOCHA_SEARCH_API_KEYOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BOCHA_SEARCH_API_KEY.Get(), o.BOCHA_SEARCH_API_KEY.IsSet()
}

// HasBOCHA_SEARCH_API_KEY returns a boolean if a field has been set.
func (o *WebConfig) HasBOCHA_SEARCH_API_KEY() bool {
	if o != nil && o.BOCHA_SEARCH_API_KEY.IsSet() {
		return true
	}

	return false
}

// SetBOCHA_SEARCH_API_KEY gets a reference to the given NullableString and assigns it to the BOCHA_SEARCH_API_KEY field.
func (o *WebConfig) SetBOCHA_SEARCH_API_KEY(v string) {
	o.BOCHA_SEARCH_API_KEY.Set(&v)
}
// SetBOCHA_SEARCH_API_KEYNil sets the value for BOCHA_SEARCH_API_KEY to be an explicit nil
func (o *WebConfig) SetBOCHA_SEARCH_API_KEYNil() {
	o.BOCHA_SEARCH_API_KEY.Set(nil)
}

// UnsetBOCHA_SEARCH_API_KEY ensures that no value is present for BOCHA_SEARCH_API_KEY, not even an explicit nil
func (o *WebConfig) UnsetBOCHA_SEARCH_API_KEY() {
	o.BOCHA_SEARCH_API_KEY.Unset()
}

// GetSERPSTACK_API_KEY returns the SERPSTACK_API_KEY field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetSERPSTACK_API_KEY() string {
	if o == nil || IsNil(o.SERPSTACK_API_KEY.Get()) {
		var ret string
		return ret
	}
	return *o.SERPSTACK_API_KEY.Get()
}

// GetSERPSTACK_API_KEYOk returns a tuple with the SERPSTACK_API_KEY field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetSERPSTACK_API_KEYOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SERPSTACK_API_KEY.Get(), o.SERPSTACK_API_KEY.IsSet()
}

// HasSERPSTACK_API_KEY returns a boolean if a field has been set.
func (o *WebConfig) HasSERPSTACK_API_KEY() bool {
	if o != nil && o.SERPSTACK_API_KEY.IsSet() {
		return true
	}

	return false
}

// SetSERPSTACK_API_KEY gets a reference to the given NullableString and assigns it to the SERPSTACK_API_KEY field.
func (o *WebConfig) SetSERPSTACK_API_KEY(v string) {
	o.SERPSTACK_API_KEY.Set(&v)
}
// SetSERPSTACK_API_KEYNil sets the value for SERPSTACK_API_KEY to be an explicit nil
func (o *WebConfig) SetSERPSTACK_API_KEYNil() {
	o.SERPSTACK_API_KEY.Set(nil)
}

// UnsetSERPSTACK_API_KEY ensures that no value is present for SERPSTACK_API_KEY, not even an explicit nil
func (o *WebConfig) UnsetSERPSTACK_API_KEY() {
	o.SERPSTACK_API_KEY.Unset()
}

// GetSERPSTACK_HTTPS returns the SERPSTACK_HTTPS field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetSERPSTACK_HTTPS() bool {
	if o == nil || IsNil(o.SERPSTACK_HTTPS.Get()) {
		var ret bool
		return ret
	}
	return *o.SERPSTACK_HTTPS.Get()
}

// GetSERPSTACK_HTTPSOk returns a tuple with the SERPSTACK_HTTPS field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetSERPSTACK_HTTPSOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SERPSTACK_HTTPS.Get(), o.SERPSTACK_HTTPS.IsSet()
}

// HasSERPSTACK_HTTPS returns a boolean if a field has been set.
func (o *WebConfig) HasSERPSTACK_HTTPS() bool {
	if o != nil && o.SERPSTACK_HTTPS.IsSet() {
		return true
	}

	return false
}

// SetSERPSTACK_HTTPS gets a reference to the given NullableBool and assigns it to the SERPSTACK_HTTPS field.
func (o *WebConfig) SetSERPSTACK_HTTPS(v bool) {
	o.SERPSTACK_HTTPS.Set(&v)
}
// SetSERPSTACK_HTTPSNil sets the value for SERPSTACK_HTTPS to be an explicit nil
func (o *WebConfig) SetSERPSTACK_HTTPSNil() {
	o.SERPSTACK_HTTPS.Set(nil)
}

// UnsetSERPSTACK_HTTPS ensures that no value is present for SERPSTACK_HTTPS, not even an explicit nil
func (o *WebConfig) UnsetSERPSTACK_HTTPS() {
	o.SERPSTACK_HTTPS.Unset()
}

// GetSERPER_API_KEY returns the SERPER_API_KEY field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetSERPER_API_KEY() string {
	if o == nil || IsNil(o.SERPER_API_KEY.Get()) {
		var ret string
		return ret
	}
	return *o.SERPER_API_KEY.Get()
}

// GetSERPER_API_KEYOk returns a tuple with the SERPER_API_KEY field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetSERPER_API_KEYOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SERPER_API_KEY.Get(), o.SERPER_API_KEY.IsSet()
}

// HasSERPER_API_KEY returns a boolean if a field has been set.
func (o *WebConfig) HasSERPER_API_KEY() bool {
	if o != nil && o.SERPER_API_KEY.IsSet() {
		return true
	}

	return false
}

// SetSERPER_API_KEY gets a reference to the given NullableString and assigns it to the SERPER_API_KEY field.
func (o *WebConfig) SetSERPER_API_KEY(v string) {
	o.SERPER_API_KEY.Set(&v)
}
// SetSERPER_API_KEYNil sets the value for SERPER_API_KEY to be an explicit nil
func (o *WebConfig) SetSERPER_API_KEYNil() {
	o.SERPER_API_KEY.Set(nil)
}

// UnsetSERPER_API_KEY ensures that no value is present for SERPER_API_KEY, not even an explicit nil
func (o *WebConfig) UnsetSERPER_API_KEY() {
	o.SERPER_API_KEY.Unset()
}

// GetSERPLY_API_KEY returns the SERPLY_API_KEY field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetSERPLY_API_KEY() string {
	if o == nil || IsNil(o.SERPLY_API_KEY.Get()) {
		var ret string
		return ret
	}
	return *o.SERPLY_API_KEY.Get()
}

// GetSERPLY_API_KEYOk returns a tuple with the SERPLY_API_KEY field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetSERPLY_API_KEYOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SERPLY_API_KEY.Get(), o.SERPLY_API_KEY.IsSet()
}

// HasSERPLY_API_KEY returns a boolean if a field has been set.
func (o *WebConfig) HasSERPLY_API_KEY() bool {
	if o != nil && o.SERPLY_API_KEY.IsSet() {
		return true
	}

	return false
}

// SetSERPLY_API_KEY gets a reference to the given NullableString and assigns it to the SERPLY_API_KEY field.
func (o *WebConfig) SetSERPLY_API_KEY(v string) {
	o.SERPLY_API_KEY.Set(&v)
}
// SetSERPLY_API_KEYNil sets the value for SERPLY_API_KEY to be an explicit nil
func (o *WebConfig) SetSERPLY_API_KEYNil() {
	o.SERPLY_API_KEY.Set(nil)
}

// UnsetSERPLY_API_KEY ensures that no value is present for SERPLY_API_KEY, not even an explicit nil
func (o *WebConfig) UnsetSERPLY_API_KEY() {
	o.SERPLY_API_KEY.Unset()
}

// GetTAVILY_API_KEY returns the TAVILY_API_KEY field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetTAVILY_API_KEY() string {
	if o == nil || IsNil(o.TAVILY_API_KEY.Get()) {
		var ret string
		return ret
	}
	return *o.TAVILY_API_KEY.Get()
}

// GetTAVILY_API_KEYOk returns a tuple with the TAVILY_API_KEY field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetTAVILY_API_KEYOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TAVILY_API_KEY.Get(), o.TAVILY_API_KEY.IsSet()
}

// HasTAVILY_API_KEY returns a boolean if a field has been set.
func (o *WebConfig) HasTAVILY_API_KEY() bool {
	if o != nil && o.TAVILY_API_KEY.IsSet() {
		return true
	}

	return false
}

// SetTAVILY_API_KEY gets a reference to the given NullableString and assigns it to the TAVILY_API_KEY field.
func (o *WebConfig) SetTAVILY_API_KEY(v string) {
	o.TAVILY_API_KEY.Set(&v)
}
// SetTAVILY_API_KEYNil sets the value for TAVILY_API_KEY to be an explicit nil
func (o *WebConfig) SetTAVILY_API_KEYNil() {
	o.TAVILY_API_KEY.Set(nil)
}

// UnsetTAVILY_API_KEY ensures that no value is present for TAVILY_API_KEY, not even an explicit nil
func (o *WebConfig) UnsetTAVILY_API_KEY() {
	o.TAVILY_API_KEY.Unset()
}

// GetSEARCHAPI_API_KEY returns the SEARCHAPI_API_KEY field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetSEARCHAPI_API_KEY() string {
	if o == nil || IsNil(o.SEARCHAPI_API_KEY.Get()) {
		var ret string
		return ret
	}
	return *o.SEARCHAPI_API_KEY.Get()
}

// GetSEARCHAPI_API_KEYOk returns a tuple with the SEARCHAPI_API_KEY field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetSEARCHAPI_API_KEYOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SEARCHAPI_API_KEY.Get(), o.SEARCHAPI_API_KEY.IsSet()
}

// HasSEARCHAPI_API_KEY returns a boolean if a field has been set.
func (o *WebConfig) HasSEARCHAPI_API_KEY() bool {
	if o != nil && o.SEARCHAPI_API_KEY.IsSet() {
		return true
	}

	return false
}

// SetSEARCHAPI_API_KEY gets a reference to the given NullableString and assigns it to the SEARCHAPI_API_KEY field.
func (o *WebConfig) SetSEARCHAPI_API_KEY(v string) {
	o.SEARCHAPI_API_KEY.Set(&v)
}
// SetSEARCHAPI_API_KEYNil sets the value for SEARCHAPI_API_KEY to be an explicit nil
func (o *WebConfig) SetSEARCHAPI_API_KEYNil() {
	o.SEARCHAPI_API_KEY.Set(nil)
}

// UnsetSEARCHAPI_API_KEY ensures that no value is present for SEARCHAPI_API_KEY, not even an explicit nil
func (o *WebConfig) UnsetSEARCHAPI_API_KEY() {
	o.SEARCHAPI_API_KEY.Unset()
}

// GetSEARCHAPI_ENGINE returns the SEARCHAPI_ENGINE field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetSEARCHAPI_ENGINE() string {
	if o == nil || IsNil(o.SEARCHAPI_ENGINE.Get()) {
		var ret string
		return ret
	}
	return *o.SEARCHAPI_ENGINE.Get()
}

// GetSEARCHAPI_ENGINEOk returns a tuple with the SEARCHAPI_ENGINE field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetSEARCHAPI_ENGINEOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SEARCHAPI_ENGINE.Get(), o.SEARCHAPI_ENGINE.IsSet()
}

// HasSEARCHAPI_ENGINE returns a boolean if a field has been set.
func (o *WebConfig) HasSEARCHAPI_ENGINE() bool {
	if o != nil && o.SEARCHAPI_ENGINE.IsSet() {
		return true
	}

	return false
}

// SetSEARCHAPI_ENGINE gets a reference to the given NullableString and assigns it to the SEARCHAPI_ENGINE field.
func (o *WebConfig) SetSEARCHAPI_ENGINE(v string) {
	o.SEARCHAPI_ENGINE.Set(&v)
}
// SetSEARCHAPI_ENGINENil sets the value for SEARCHAPI_ENGINE to be an explicit nil
func (o *WebConfig) SetSEARCHAPI_ENGINENil() {
	o.SEARCHAPI_ENGINE.Set(nil)
}

// UnsetSEARCHAPI_ENGINE ensures that no value is present for SEARCHAPI_ENGINE, not even an explicit nil
func (o *WebConfig) UnsetSEARCHAPI_ENGINE() {
	o.SEARCHAPI_ENGINE.Unset()
}

// GetSERPAPI_API_KEY returns the SERPAPI_API_KEY field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetSERPAPI_API_KEY() string {
	if o == nil || IsNil(o.SERPAPI_API_KEY.Get()) {
		var ret string
		return ret
	}
	return *o.SERPAPI_API_KEY.Get()
}

// GetSERPAPI_API_KEYOk returns a tuple with the SERPAPI_API_KEY field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetSERPAPI_API_KEYOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SERPAPI_API_KEY.Get(), o.SERPAPI_API_KEY.IsSet()
}

// HasSERPAPI_API_KEY returns a boolean if a field has been set.
func (o *WebConfig) HasSERPAPI_API_KEY() bool {
	if o != nil && o.SERPAPI_API_KEY.IsSet() {
		return true
	}

	return false
}

// SetSERPAPI_API_KEY gets a reference to the given NullableString and assigns it to the SERPAPI_API_KEY field.
func (o *WebConfig) SetSERPAPI_API_KEY(v string) {
	o.SERPAPI_API_KEY.Set(&v)
}
// SetSERPAPI_API_KEYNil sets the value for SERPAPI_API_KEY to be an explicit nil
func (o *WebConfig) SetSERPAPI_API_KEYNil() {
	o.SERPAPI_API_KEY.Set(nil)
}

// UnsetSERPAPI_API_KEY ensures that no value is present for SERPAPI_API_KEY, not even an explicit nil
func (o *WebConfig) UnsetSERPAPI_API_KEY() {
	o.SERPAPI_API_KEY.Unset()
}

// GetSERPAPI_ENGINE returns the SERPAPI_ENGINE field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetSERPAPI_ENGINE() string {
	if o == nil || IsNil(o.SERPAPI_ENGINE.Get()) {
		var ret string
		return ret
	}
	return *o.SERPAPI_ENGINE.Get()
}

// GetSERPAPI_ENGINEOk returns a tuple with the SERPAPI_ENGINE field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetSERPAPI_ENGINEOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SERPAPI_ENGINE.Get(), o.SERPAPI_ENGINE.IsSet()
}

// HasSERPAPI_ENGINE returns a boolean if a field has been set.
func (o *WebConfig) HasSERPAPI_ENGINE() bool {
	if o != nil && o.SERPAPI_ENGINE.IsSet() {
		return true
	}

	return false
}

// SetSERPAPI_ENGINE gets a reference to the given NullableString and assigns it to the SERPAPI_ENGINE field.
func (o *WebConfig) SetSERPAPI_ENGINE(v string) {
	o.SERPAPI_ENGINE.Set(&v)
}
// SetSERPAPI_ENGINENil sets the value for SERPAPI_ENGINE to be an explicit nil
func (o *WebConfig) SetSERPAPI_ENGINENil() {
	o.SERPAPI_ENGINE.Set(nil)
}

// UnsetSERPAPI_ENGINE ensures that no value is present for SERPAPI_ENGINE, not even an explicit nil
func (o *WebConfig) UnsetSERPAPI_ENGINE() {
	o.SERPAPI_ENGINE.Unset()
}

// GetJINA_API_KEY returns the JINA_API_KEY field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetJINA_API_KEY() string {
	if o == nil || IsNil(o.JINA_API_KEY.Get()) {
		var ret string
		return ret
	}
	return *o.JINA_API_KEY.Get()
}

// GetJINA_API_KEYOk returns a tuple with the JINA_API_KEY field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetJINA_API_KEYOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.JINA_API_KEY.Get(), o.JINA_API_KEY.IsSet()
}

// HasJINA_API_KEY returns a boolean if a field has been set.
func (o *WebConfig) HasJINA_API_KEY() bool {
	if o != nil && o.JINA_API_KEY.IsSet() {
		return true
	}

	return false
}

// SetJINA_API_KEY gets a reference to the given NullableString and assigns it to the JINA_API_KEY field.
func (o *WebConfig) SetJINA_API_KEY(v string) {
	o.JINA_API_KEY.Set(&v)
}
// SetJINA_API_KEYNil sets the value for JINA_API_KEY to be an explicit nil
func (o *WebConfig) SetJINA_API_KEYNil() {
	o.JINA_API_KEY.Set(nil)
}

// UnsetJINA_API_KEY ensures that no value is present for JINA_API_KEY, not even an explicit nil
func (o *WebConfig) UnsetJINA_API_KEY() {
	o.JINA_API_KEY.Unset()
}

// GetBINGSEARCHV7ENDPOINT returns the BINGSEARCHV7ENDPOINT field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetBINGSEARCHV7ENDPOINT() string {
	if o == nil || IsNil(o.BINGSEARCHV7ENDPOINT.Get()) {
		var ret string
		return ret
	}
	return *o.BINGSEARCHV7ENDPOINT.Get()
}

// GetBINGSEARCHV7ENDPOINTOk returns a tuple with the BINGSEARCHV7ENDPOINT field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetBINGSEARCHV7ENDPOINTOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BINGSEARCHV7ENDPOINT.Get(), o.BINGSEARCHV7ENDPOINT.IsSet()
}

// HasBINGSEARCHV7ENDPOINT returns a boolean if a field has been set.
func (o *WebConfig) HasBINGSEARCHV7ENDPOINT() bool {
	if o != nil && o.BINGSEARCHV7ENDPOINT.IsSet() {
		return true
	}

	return false
}

// SetBINGSEARCHV7ENDPOINT gets a reference to the given NullableString and assigns it to the BINGSEARCHV7ENDPOINT field.
func (o *WebConfig) SetBINGSEARCHV7ENDPOINT(v string) {
	o.BINGSEARCHV7ENDPOINT.Set(&v)
}
// SetBINGSEARCHV7ENDPOINTNil sets the value for BINGSEARCHV7ENDPOINT to be an explicit nil
func (o *WebConfig) SetBINGSEARCHV7ENDPOINTNil() {
	o.BINGSEARCHV7ENDPOINT.Set(nil)
}

// UnsetBINGSEARCHV7ENDPOINT ensures that no value is present for BINGSEARCHV7ENDPOINT, not even an explicit nil
func (o *WebConfig) UnsetBINGSEARCHV7ENDPOINT() {
	o.BINGSEARCHV7ENDPOINT.Unset()
}

// GetBINGSEARCHV7SUBSCRIPTIONKEY returns the BINGSEARCHV7SUBSCRIPTIONKEY field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetBINGSEARCHV7SUBSCRIPTIONKEY() string {
	if o == nil || IsNil(o.BINGSEARCHV7SUBSCRIPTIONKEY.Get()) {
		var ret string
		return ret
	}
	return *o.BINGSEARCHV7SUBSCRIPTIONKEY.Get()
}

// GetBINGSEARCHV7SUBSCRIPTIONKEYOk returns a tuple with the BINGSEARCHV7SUBSCRIPTIONKEY field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetBINGSEARCHV7SUBSCRIPTIONKEYOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BINGSEARCHV7SUBSCRIPTIONKEY.Get(), o.BINGSEARCHV7SUBSCRIPTIONKEY.IsSet()
}

// HasBINGSEARCHV7SUBSCRIPTIONKEY returns a boolean if a field has been set.
func (o *WebConfig) HasBINGSEARCHV7SUBSCRIPTIONKEY() bool {
	if o != nil && o.BINGSEARCHV7SUBSCRIPTIONKEY.IsSet() {
		return true
	}

	return false
}

// SetBINGSEARCHV7SUBSCRIPTIONKEY gets a reference to the given NullableString and assigns it to the BINGSEARCHV7SUBSCRIPTIONKEY field.
func (o *WebConfig) SetBINGSEARCHV7SUBSCRIPTIONKEY(v string) {
	o.BINGSEARCHV7SUBSCRIPTIONKEY.Set(&v)
}
// SetBINGSEARCHV7SUBSCRIPTIONKEYNil sets the value for BINGSEARCHV7SUBSCRIPTIONKEY to be an explicit nil
func (o *WebConfig) SetBINGSEARCHV7SUBSCRIPTIONKEYNil() {
	o.BINGSEARCHV7SUBSCRIPTIONKEY.Set(nil)
}

// UnsetBINGSEARCHV7SUBSCRIPTIONKEY ensures that no value is present for BINGSEARCHV7SUBSCRIPTIONKEY, not even an explicit nil
func (o *WebConfig) UnsetBINGSEARCHV7SUBSCRIPTIONKEY() {
	o.BINGSEARCHV7SUBSCRIPTIONKEY.Unset()
}

// GetEXA_API_KEY returns the EXA_API_KEY field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetEXA_API_KEY() string {
	if o == nil || IsNil(o.EXA_API_KEY.Get()) {
		var ret string
		return ret
	}
	return *o.EXA_API_KEY.Get()
}

// GetEXA_API_KEYOk returns a tuple with the EXA_API_KEY field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetEXA_API_KEYOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EXA_API_KEY.Get(), o.EXA_API_KEY.IsSet()
}

// HasEXA_API_KEY returns a boolean if a field has been set.
func (o *WebConfig) HasEXA_API_KEY() bool {
	if o != nil && o.EXA_API_KEY.IsSet() {
		return true
	}

	return false
}

// SetEXA_API_KEY gets a reference to the given NullableString and assigns it to the EXA_API_KEY field.
func (o *WebConfig) SetEXA_API_KEY(v string) {
	o.EXA_API_KEY.Set(&v)
}
// SetEXA_API_KEYNil sets the value for EXA_API_KEY to be an explicit nil
func (o *WebConfig) SetEXA_API_KEYNil() {
	o.EXA_API_KEY.Set(nil)
}

// UnsetEXA_API_KEY ensures that no value is present for EXA_API_KEY, not even an explicit nil
func (o *WebConfig) UnsetEXA_API_KEY() {
	o.EXA_API_KEY.Unset()
}

// GetPERPLEXITY_API_KEY returns the PERPLEXITY_API_KEY field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetPERPLEXITY_API_KEY() string {
	if o == nil || IsNil(o.PERPLEXITY_API_KEY.Get()) {
		var ret string
		return ret
	}
	return *o.PERPLEXITY_API_KEY.Get()
}

// GetPERPLEXITY_API_KEYOk returns a tuple with the PERPLEXITY_API_KEY field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetPERPLEXITY_API_KEYOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PERPLEXITY_API_KEY.Get(), o.PERPLEXITY_API_KEY.IsSet()
}

// HasPERPLEXITY_API_KEY returns a boolean if a field has been set.
func (o *WebConfig) HasPERPLEXITY_API_KEY() bool {
	if o != nil && o.PERPLEXITY_API_KEY.IsSet() {
		return true
	}

	return false
}

// SetPERPLEXITY_API_KEY gets a reference to the given NullableString and assigns it to the PERPLEXITY_API_KEY field.
func (o *WebConfig) SetPERPLEXITY_API_KEY(v string) {
	o.PERPLEXITY_API_KEY.Set(&v)
}
// SetPERPLEXITY_API_KEYNil sets the value for PERPLEXITY_API_KEY to be an explicit nil
func (o *WebConfig) SetPERPLEXITY_API_KEYNil() {
	o.PERPLEXITY_API_KEY.Set(nil)
}

// UnsetPERPLEXITY_API_KEY ensures that no value is present for PERPLEXITY_API_KEY, not even an explicit nil
func (o *WebConfig) UnsetPERPLEXITY_API_KEY() {
	o.PERPLEXITY_API_KEY.Unset()
}

// GetPERPLEXITY_MODEL returns the PERPLEXITY_MODEL field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetPERPLEXITY_MODEL() string {
	if o == nil || IsNil(o.PERPLEXITY_MODEL.Get()) {
		var ret string
		return ret
	}
	return *o.PERPLEXITY_MODEL.Get()
}

// GetPERPLEXITY_MODELOk returns a tuple with the PERPLEXITY_MODEL field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetPERPLEXITY_MODELOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PERPLEXITY_MODEL.Get(), o.PERPLEXITY_MODEL.IsSet()
}

// HasPERPLEXITY_MODEL returns a boolean if a field has been set.
func (o *WebConfig) HasPERPLEXITY_MODEL() bool {
	if o != nil && o.PERPLEXITY_MODEL.IsSet() {
		return true
	}

	return false
}

// SetPERPLEXITY_MODEL gets a reference to the given NullableString and assigns it to the PERPLEXITY_MODEL field.
func (o *WebConfig) SetPERPLEXITY_MODEL(v string) {
	o.PERPLEXITY_MODEL.Set(&v)
}
// SetPERPLEXITY_MODELNil sets the value for PERPLEXITY_MODEL to be an explicit nil
func (o *WebConfig) SetPERPLEXITY_MODELNil() {
	o.PERPLEXITY_MODEL.Set(nil)
}

// UnsetPERPLEXITY_MODEL ensures that no value is present for PERPLEXITY_MODEL, not even an explicit nil
func (o *WebConfig) UnsetPERPLEXITY_MODEL() {
	o.PERPLEXITY_MODEL.Unset()
}

// GetPERPLEXITY_SEARCH_CONTEXT_USAGE returns the PERPLEXITY_SEARCH_CONTEXT_USAGE field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetPERPLEXITY_SEARCH_CONTEXT_USAGE() string {
	if o == nil || IsNil(o.PERPLEXITY_SEARCH_CONTEXT_USAGE.Get()) {
		var ret string
		return ret
	}
	return *o.PERPLEXITY_SEARCH_CONTEXT_USAGE.Get()
}

// GetPERPLEXITY_SEARCH_CONTEXT_USAGEOk returns a tuple with the PERPLEXITY_SEARCH_CONTEXT_USAGE field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetPERPLEXITY_SEARCH_CONTEXT_USAGEOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PERPLEXITY_SEARCH_CONTEXT_USAGE.Get(), o.PERPLEXITY_SEARCH_CONTEXT_USAGE.IsSet()
}

// HasPERPLEXITY_SEARCH_CONTEXT_USAGE returns a boolean if a field has been set.
func (o *WebConfig) HasPERPLEXITY_SEARCH_CONTEXT_USAGE() bool {
	if o != nil && o.PERPLEXITY_SEARCH_CONTEXT_USAGE.IsSet() {
		return true
	}

	return false
}

// SetPERPLEXITY_SEARCH_CONTEXT_USAGE gets a reference to the given NullableString and assigns it to the PERPLEXITY_SEARCH_CONTEXT_USAGE field.
func (o *WebConfig) SetPERPLEXITY_SEARCH_CONTEXT_USAGE(v string) {
	o.PERPLEXITY_SEARCH_CONTEXT_USAGE.Set(&v)
}
// SetPERPLEXITY_SEARCH_CONTEXT_USAGENil sets the value for PERPLEXITY_SEARCH_CONTEXT_USAGE to be an explicit nil
func (o *WebConfig) SetPERPLEXITY_SEARCH_CONTEXT_USAGENil() {
	o.PERPLEXITY_SEARCH_CONTEXT_USAGE.Set(nil)
}

// UnsetPERPLEXITY_SEARCH_CONTEXT_USAGE ensures that no value is present for PERPLEXITY_SEARCH_CONTEXT_USAGE, not even an explicit nil
func (o *WebConfig) UnsetPERPLEXITY_SEARCH_CONTEXT_USAGE() {
	o.PERPLEXITY_SEARCH_CONTEXT_USAGE.Unset()
}

// GetSOUGOU_API_SID returns the SOUGOU_API_SID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetSOUGOU_API_SID() string {
	if o == nil || IsNil(o.SOUGOU_API_SID.Get()) {
		var ret string
		return ret
	}
	return *o.SOUGOU_API_SID.Get()
}

// GetSOUGOU_API_SIDOk returns a tuple with the SOUGOU_API_SID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetSOUGOU_API_SIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SOUGOU_API_SID.Get(), o.SOUGOU_API_SID.IsSet()
}

// HasSOUGOU_API_SID returns a boolean if a field has been set.
func (o *WebConfig) HasSOUGOU_API_SID() bool {
	if o != nil && o.SOUGOU_API_SID.IsSet() {
		return true
	}

	return false
}

// SetSOUGOU_API_SID gets a reference to the given NullableString and assigns it to the SOUGOU_API_SID field.
func (o *WebConfig) SetSOUGOU_API_SID(v string) {
	o.SOUGOU_API_SID.Set(&v)
}
// SetSOUGOU_API_SIDNil sets the value for SOUGOU_API_SID to be an explicit nil
func (o *WebConfig) SetSOUGOU_API_SIDNil() {
	o.SOUGOU_API_SID.Set(nil)
}

// UnsetSOUGOU_API_SID ensures that no value is present for SOUGOU_API_SID, not even an explicit nil
func (o *WebConfig) UnsetSOUGOU_API_SID() {
	o.SOUGOU_API_SID.Unset()
}

// GetSOUGOU_API_SK returns the SOUGOU_API_SK field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetSOUGOU_API_SK() string {
	if o == nil || IsNil(o.SOUGOU_API_SK.Get()) {
		var ret string
		return ret
	}
	return *o.SOUGOU_API_SK.Get()
}

// GetSOUGOU_API_SKOk returns a tuple with the SOUGOU_API_SK field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetSOUGOU_API_SKOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SOUGOU_API_SK.Get(), o.SOUGOU_API_SK.IsSet()
}

// HasSOUGOU_API_SK returns a boolean if a field has been set.
func (o *WebConfig) HasSOUGOU_API_SK() bool {
	if o != nil && o.SOUGOU_API_SK.IsSet() {
		return true
	}

	return false
}

// SetSOUGOU_API_SK gets a reference to the given NullableString and assigns it to the SOUGOU_API_SK field.
func (o *WebConfig) SetSOUGOU_API_SK(v string) {
	o.SOUGOU_API_SK.Set(&v)
}
// SetSOUGOU_API_SKNil sets the value for SOUGOU_API_SK to be an explicit nil
func (o *WebConfig) SetSOUGOU_API_SKNil() {
	o.SOUGOU_API_SK.Set(nil)
}

// UnsetSOUGOU_API_SK ensures that no value is present for SOUGOU_API_SK, not even an explicit nil
func (o *WebConfig) UnsetSOUGOU_API_SK() {
	o.SOUGOU_API_SK.Unset()
}

// GetWEB_LOADER_ENGINE returns the WEB_LOADER_ENGINE field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetWEB_LOADER_ENGINE() string {
	if o == nil || IsNil(o.WEB_LOADER_ENGINE.Get()) {
		var ret string
		return ret
	}
	return *o.WEB_LOADER_ENGINE.Get()
}

// GetWEB_LOADER_ENGINEOk returns a tuple with the WEB_LOADER_ENGINE field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetWEB_LOADER_ENGINEOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WEB_LOADER_ENGINE.Get(), o.WEB_LOADER_ENGINE.IsSet()
}

// HasWEB_LOADER_ENGINE returns a boolean if a field has been set.
func (o *WebConfig) HasWEB_LOADER_ENGINE() bool {
	if o != nil && o.WEB_LOADER_ENGINE.IsSet() {
		return true
	}

	return false
}

// SetWEB_LOADER_ENGINE gets a reference to the given NullableString and assigns it to the WEB_LOADER_ENGINE field.
func (o *WebConfig) SetWEB_LOADER_ENGINE(v string) {
	o.WEB_LOADER_ENGINE.Set(&v)
}
// SetWEB_LOADER_ENGINENil sets the value for WEB_LOADER_ENGINE to be an explicit nil
func (o *WebConfig) SetWEB_LOADER_ENGINENil() {
	o.WEB_LOADER_ENGINE.Set(nil)
}

// UnsetWEB_LOADER_ENGINE ensures that no value is present for WEB_LOADER_ENGINE, not even an explicit nil
func (o *WebConfig) UnsetWEB_LOADER_ENGINE() {
	o.WEB_LOADER_ENGINE.Unset()
}

// GetENABLE_WEB_LOADER_SSL_VERIFICATION returns the ENABLE_WEB_LOADER_SSL_VERIFICATION field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetENABLE_WEB_LOADER_SSL_VERIFICATION() bool {
	if o == nil || IsNil(o.ENABLE_WEB_LOADER_SSL_VERIFICATION.Get()) {
		var ret bool
		return ret
	}
	return *o.ENABLE_WEB_LOADER_SSL_VERIFICATION.Get()
}

// GetENABLE_WEB_LOADER_SSL_VERIFICATIONOk returns a tuple with the ENABLE_WEB_LOADER_SSL_VERIFICATION field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetENABLE_WEB_LOADER_SSL_VERIFICATIONOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ENABLE_WEB_LOADER_SSL_VERIFICATION.Get(), o.ENABLE_WEB_LOADER_SSL_VERIFICATION.IsSet()
}

// HasENABLE_WEB_LOADER_SSL_VERIFICATION returns a boolean if a field has been set.
func (o *WebConfig) HasENABLE_WEB_LOADER_SSL_VERIFICATION() bool {
	if o != nil && o.ENABLE_WEB_LOADER_SSL_VERIFICATION.IsSet() {
		return true
	}

	return false
}

// SetENABLE_WEB_LOADER_SSL_VERIFICATION gets a reference to the given NullableBool and assigns it to the ENABLE_WEB_LOADER_SSL_VERIFICATION field.
func (o *WebConfig) SetENABLE_WEB_LOADER_SSL_VERIFICATION(v bool) {
	o.ENABLE_WEB_LOADER_SSL_VERIFICATION.Set(&v)
}
// SetENABLE_WEB_LOADER_SSL_VERIFICATIONNil sets the value for ENABLE_WEB_LOADER_SSL_VERIFICATION to be an explicit nil
func (o *WebConfig) SetENABLE_WEB_LOADER_SSL_VERIFICATIONNil() {
	o.ENABLE_WEB_LOADER_SSL_VERIFICATION.Set(nil)
}

// UnsetENABLE_WEB_LOADER_SSL_VERIFICATION ensures that no value is present for ENABLE_WEB_LOADER_SSL_VERIFICATION, not even an explicit nil
func (o *WebConfig) UnsetENABLE_WEB_LOADER_SSL_VERIFICATION() {
	o.ENABLE_WEB_LOADER_SSL_VERIFICATION.Unset()
}

// GetPLAYWRIGHT_WS_URL returns the PLAYWRIGHT_WS_URL field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetPLAYWRIGHT_WS_URL() string {
	if o == nil || IsNil(o.PLAYWRIGHT_WS_URL.Get()) {
		var ret string
		return ret
	}
	return *o.PLAYWRIGHT_WS_URL.Get()
}

// GetPLAYWRIGHT_WS_URLOk returns a tuple with the PLAYWRIGHT_WS_URL field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetPLAYWRIGHT_WS_URLOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PLAYWRIGHT_WS_URL.Get(), o.PLAYWRIGHT_WS_URL.IsSet()
}

// HasPLAYWRIGHT_WS_URL returns a boolean if a field has been set.
func (o *WebConfig) HasPLAYWRIGHT_WS_URL() bool {
	if o != nil && o.PLAYWRIGHT_WS_URL.IsSet() {
		return true
	}

	return false
}

// SetPLAYWRIGHT_WS_URL gets a reference to the given NullableString and assigns it to the PLAYWRIGHT_WS_URL field.
func (o *WebConfig) SetPLAYWRIGHT_WS_URL(v string) {
	o.PLAYWRIGHT_WS_URL.Set(&v)
}
// SetPLAYWRIGHT_WS_URLNil sets the value for PLAYWRIGHT_WS_URL to be an explicit nil
func (o *WebConfig) SetPLAYWRIGHT_WS_URLNil() {
	o.PLAYWRIGHT_WS_URL.Set(nil)
}

// UnsetPLAYWRIGHT_WS_URL ensures that no value is present for PLAYWRIGHT_WS_URL, not even an explicit nil
func (o *WebConfig) UnsetPLAYWRIGHT_WS_URL() {
	o.PLAYWRIGHT_WS_URL.Unset()
}

// GetPLAYWRIGHT_TIMEOUT returns the PLAYWRIGHT_TIMEOUT field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetPLAYWRIGHT_TIMEOUT() int32 {
	if o == nil || IsNil(o.PLAYWRIGHT_TIMEOUT.Get()) {
		var ret int32
		return ret
	}
	return *o.PLAYWRIGHT_TIMEOUT.Get()
}

// GetPLAYWRIGHT_TIMEOUTOk returns a tuple with the PLAYWRIGHT_TIMEOUT field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetPLAYWRIGHT_TIMEOUTOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PLAYWRIGHT_TIMEOUT.Get(), o.PLAYWRIGHT_TIMEOUT.IsSet()
}

// HasPLAYWRIGHT_TIMEOUT returns a boolean if a field has been set.
func (o *WebConfig) HasPLAYWRIGHT_TIMEOUT() bool {
	if o != nil && o.PLAYWRIGHT_TIMEOUT.IsSet() {
		return true
	}

	return false
}

// SetPLAYWRIGHT_TIMEOUT gets a reference to the given NullableInt32 and assigns it to the PLAYWRIGHT_TIMEOUT field.
func (o *WebConfig) SetPLAYWRIGHT_TIMEOUT(v int32) {
	o.PLAYWRIGHT_TIMEOUT.Set(&v)
}
// SetPLAYWRIGHT_TIMEOUTNil sets the value for PLAYWRIGHT_TIMEOUT to be an explicit nil
func (o *WebConfig) SetPLAYWRIGHT_TIMEOUTNil() {
	o.PLAYWRIGHT_TIMEOUT.Set(nil)
}

// UnsetPLAYWRIGHT_TIMEOUT ensures that no value is present for PLAYWRIGHT_TIMEOUT, not even an explicit nil
func (o *WebConfig) UnsetPLAYWRIGHT_TIMEOUT() {
	o.PLAYWRIGHT_TIMEOUT.Unset()
}

// GetFIRECRAWL_API_KEY returns the FIRECRAWL_API_KEY field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetFIRECRAWL_API_KEY() string {
	if o == nil || IsNil(o.FIRECRAWL_API_KEY.Get()) {
		var ret string
		return ret
	}
	return *o.FIRECRAWL_API_KEY.Get()
}

// GetFIRECRAWL_API_KEYOk returns a tuple with the FIRECRAWL_API_KEY field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetFIRECRAWL_API_KEYOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FIRECRAWL_API_KEY.Get(), o.FIRECRAWL_API_KEY.IsSet()
}

// HasFIRECRAWL_API_KEY returns a boolean if a field has been set.
func (o *WebConfig) HasFIRECRAWL_API_KEY() bool {
	if o != nil && o.FIRECRAWL_API_KEY.IsSet() {
		return true
	}

	return false
}

// SetFIRECRAWL_API_KEY gets a reference to the given NullableString and assigns it to the FIRECRAWL_API_KEY field.
func (o *WebConfig) SetFIRECRAWL_API_KEY(v string) {
	o.FIRECRAWL_API_KEY.Set(&v)
}
// SetFIRECRAWL_API_KEYNil sets the value for FIRECRAWL_API_KEY to be an explicit nil
func (o *WebConfig) SetFIRECRAWL_API_KEYNil() {
	o.FIRECRAWL_API_KEY.Set(nil)
}

// UnsetFIRECRAWL_API_KEY ensures that no value is present for FIRECRAWL_API_KEY, not even an explicit nil
func (o *WebConfig) UnsetFIRECRAWL_API_KEY() {
	o.FIRECRAWL_API_KEY.Unset()
}

// GetFIRECRAWL_API_BASE_URL returns the FIRECRAWL_API_BASE_URL field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetFIRECRAWL_API_BASE_URL() string {
	if o == nil || IsNil(o.FIRECRAWL_API_BASE_URL.Get()) {
		var ret string
		return ret
	}
	return *o.FIRECRAWL_API_BASE_URL.Get()
}

// GetFIRECRAWL_API_BASE_URLOk returns a tuple with the FIRECRAWL_API_BASE_URL field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetFIRECRAWL_API_BASE_URLOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FIRECRAWL_API_BASE_URL.Get(), o.FIRECRAWL_API_BASE_URL.IsSet()
}

// HasFIRECRAWL_API_BASE_URL returns a boolean if a field has been set.
func (o *WebConfig) HasFIRECRAWL_API_BASE_URL() bool {
	if o != nil && o.FIRECRAWL_API_BASE_URL.IsSet() {
		return true
	}

	return false
}

// SetFIRECRAWL_API_BASE_URL gets a reference to the given NullableString and assigns it to the FIRECRAWL_API_BASE_URL field.
func (o *WebConfig) SetFIRECRAWL_API_BASE_URL(v string) {
	o.FIRECRAWL_API_BASE_URL.Set(&v)
}
// SetFIRECRAWL_API_BASE_URLNil sets the value for FIRECRAWL_API_BASE_URL to be an explicit nil
func (o *WebConfig) SetFIRECRAWL_API_BASE_URLNil() {
	o.FIRECRAWL_API_BASE_URL.Set(nil)
}

// UnsetFIRECRAWL_API_BASE_URL ensures that no value is present for FIRECRAWL_API_BASE_URL, not even an explicit nil
func (o *WebConfig) UnsetFIRECRAWL_API_BASE_URL() {
	o.FIRECRAWL_API_BASE_URL.Unset()
}

// GetTAVILY_EXTRACT_DEPTH returns the TAVILY_EXTRACT_DEPTH field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetTAVILY_EXTRACT_DEPTH() string {
	if o == nil || IsNil(o.TAVILY_EXTRACT_DEPTH.Get()) {
		var ret string
		return ret
	}
	return *o.TAVILY_EXTRACT_DEPTH.Get()
}

// GetTAVILY_EXTRACT_DEPTHOk returns a tuple with the TAVILY_EXTRACT_DEPTH field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetTAVILY_EXTRACT_DEPTHOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TAVILY_EXTRACT_DEPTH.Get(), o.TAVILY_EXTRACT_DEPTH.IsSet()
}

// HasTAVILY_EXTRACT_DEPTH returns a boolean if a field has been set.
func (o *WebConfig) HasTAVILY_EXTRACT_DEPTH() bool {
	if o != nil && o.TAVILY_EXTRACT_DEPTH.IsSet() {
		return true
	}

	return false
}

// SetTAVILY_EXTRACT_DEPTH gets a reference to the given NullableString and assigns it to the TAVILY_EXTRACT_DEPTH field.
func (o *WebConfig) SetTAVILY_EXTRACT_DEPTH(v string) {
	o.TAVILY_EXTRACT_DEPTH.Set(&v)
}
// SetTAVILY_EXTRACT_DEPTHNil sets the value for TAVILY_EXTRACT_DEPTH to be an explicit nil
func (o *WebConfig) SetTAVILY_EXTRACT_DEPTHNil() {
	o.TAVILY_EXTRACT_DEPTH.Set(nil)
}

// UnsetTAVILY_EXTRACT_DEPTH ensures that no value is present for TAVILY_EXTRACT_DEPTH, not even an explicit nil
func (o *WebConfig) UnsetTAVILY_EXTRACT_DEPTH() {
	o.TAVILY_EXTRACT_DEPTH.Unset()
}

// GetEXTERNAL_WEB_SEARCH_URL returns the EXTERNAL_WEB_SEARCH_URL field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetEXTERNAL_WEB_SEARCH_URL() string {
	if o == nil || IsNil(o.EXTERNAL_WEB_SEARCH_URL.Get()) {
		var ret string
		return ret
	}
	return *o.EXTERNAL_WEB_SEARCH_URL.Get()
}

// GetEXTERNAL_WEB_SEARCH_URLOk returns a tuple with the EXTERNAL_WEB_SEARCH_URL field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetEXTERNAL_WEB_SEARCH_URLOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EXTERNAL_WEB_SEARCH_URL.Get(), o.EXTERNAL_WEB_SEARCH_URL.IsSet()
}

// HasEXTERNAL_WEB_SEARCH_URL returns a boolean if a field has been set.
func (o *WebConfig) HasEXTERNAL_WEB_SEARCH_URL() bool {
	if o != nil && o.EXTERNAL_WEB_SEARCH_URL.IsSet() {
		return true
	}

	return false
}

// SetEXTERNAL_WEB_SEARCH_URL gets a reference to the given NullableString and assigns it to the EXTERNAL_WEB_SEARCH_URL field.
func (o *WebConfig) SetEXTERNAL_WEB_SEARCH_URL(v string) {
	o.EXTERNAL_WEB_SEARCH_URL.Set(&v)
}
// SetEXTERNAL_WEB_SEARCH_URLNil sets the value for EXTERNAL_WEB_SEARCH_URL to be an explicit nil
func (o *WebConfig) SetEXTERNAL_WEB_SEARCH_URLNil() {
	o.EXTERNAL_WEB_SEARCH_URL.Set(nil)
}

// UnsetEXTERNAL_WEB_SEARCH_URL ensures that no value is present for EXTERNAL_WEB_SEARCH_URL, not even an explicit nil
func (o *WebConfig) UnsetEXTERNAL_WEB_SEARCH_URL() {
	o.EXTERNAL_WEB_SEARCH_URL.Unset()
}

// GetEXTERNAL_WEB_SEARCH_API_KEY returns the EXTERNAL_WEB_SEARCH_API_KEY field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetEXTERNAL_WEB_SEARCH_API_KEY() string {
	if o == nil || IsNil(o.EXTERNAL_WEB_SEARCH_API_KEY.Get()) {
		var ret string
		return ret
	}
	return *o.EXTERNAL_WEB_SEARCH_API_KEY.Get()
}

// GetEXTERNAL_WEB_SEARCH_API_KEYOk returns a tuple with the EXTERNAL_WEB_SEARCH_API_KEY field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetEXTERNAL_WEB_SEARCH_API_KEYOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EXTERNAL_WEB_SEARCH_API_KEY.Get(), o.EXTERNAL_WEB_SEARCH_API_KEY.IsSet()
}

// HasEXTERNAL_WEB_SEARCH_API_KEY returns a boolean if a field has been set.
func (o *WebConfig) HasEXTERNAL_WEB_SEARCH_API_KEY() bool {
	if o != nil && o.EXTERNAL_WEB_SEARCH_API_KEY.IsSet() {
		return true
	}

	return false
}

// SetEXTERNAL_WEB_SEARCH_API_KEY gets a reference to the given NullableString and assigns it to the EXTERNAL_WEB_SEARCH_API_KEY field.
func (o *WebConfig) SetEXTERNAL_WEB_SEARCH_API_KEY(v string) {
	o.EXTERNAL_WEB_SEARCH_API_KEY.Set(&v)
}
// SetEXTERNAL_WEB_SEARCH_API_KEYNil sets the value for EXTERNAL_WEB_SEARCH_API_KEY to be an explicit nil
func (o *WebConfig) SetEXTERNAL_WEB_SEARCH_API_KEYNil() {
	o.EXTERNAL_WEB_SEARCH_API_KEY.Set(nil)
}

// UnsetEXTERNAL_WEB_SEARCH_API_KEY ensures that no value is present for EXTERNAL_WEB_SEARCH_API_KEY, not even an explicit nil
func (o *WebConfig) UnsetEXTERNAL_WEB_SEARCH_API_KEY() {
	o.EXTERNAL_WEB_SEARCH_API_KEY.Unset()
}

// GetEXTERNAL_WEB_LOADER_URL returns the EXTERNAL_WEB_LOADER_URL field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetEXTERNAL_WEB_LOADER_URL() string {
	if o == nil || IsNil(o.EXTERNAL_WEB_LOADER_URL.Get()) {
		var ret string
		return ret
	}
	return *o.EXTERNAL_WEB_LOADER_URL.Get()
}

// GetEXTERNAL_WEB_LOADER_URLOk returns a tuple with the EXTERNAL_WEB_LOADER_URL field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetEXTERNAL_WEB_LOADER_URLOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EXTERNAL_WEB_LOADER_URL.Get(), o.EXTERNAL_WEB_LOADER_URL.IsSet()
}

// HasEXTERNAL_WEB_LOADER_URL returns a boolean if a field has been set.
func (o *WebConfig) HasEXTERNAL_WEB_LOADER_URL() bool {
	if o != nil && o.EXTERNAL_WEB_LOADER_URL.IsSet() {
		return true
	}

	return false
}

// SetEXTERNAL_WEB_LOADER_URL gets a reference to the given NullableString and assigns it to the EXTERNAL_WEB_LOADER_URL field.
func (o *WebConfig) SetEXTERNAL_WEB_LOADER_URL(v string) {
	o.EXTERNAL_WEB_LOADER_URL.Set(&v)
}
// SetEXTERNAL_WEB_LOADER_URLNil sets the value for EXTERNAL_WEB_LOADER_URL to be an explicit nil
func (o *WebConfig) SetEXTERNAL_WEB_LOADER_URLNil() {
	o.EXTERNAL_WEB_LOADER_URL.Set(nil)
}

// UnsetEXTERNAL_WEB_LOADER_URL ensures that no value is present for EXTERNAL_WEB_LOADER_URL, not even an explicit nil
func (o *WebConfig) UnsetEXTERNAL_WEB_LOADER_URL() {
	o.EXTERNAL_WEB_LOADER_URL.Unset()
}

// GetEXTERNAL_WEB_LOADER_API_KEY returns the EXTERNAL_WEB_LOADER_API_KEY field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetEXTERNAL_WEB_LOADER_API_KEY() string {
	if o == nil || IsNil(o.EXTERNAL_WEB_LOADER_API_KEY.Get()) {
		var ret string
		return ret
	}
	return *o.EXTERNAL_WEB_LOADER_API_KEY.Get()
}

// GetEXTERNAL_WEB_LOADER_API_KEYOk returns a tuple with the EXTERNAL_WEB_LOADER_API_KEY field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetEXTERNAL_WEB_LOADER_API_KEYOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EXTERNAL_WEB_LOADER_API_KEY.Get(), o.EXTERNAL_WEB_LOADER_API_KEY.IsSet()
}

// HasEXTERNAL_WEB_LOADER_API_KEY returns a boolean if a field has been set.
func (o *WebConfig) HasEXTERNAL_WEB_LOADER_API_KEY() bool {
	if o != nil && o.EXTERNAL_WEB_LOADER_API_KEY.IsSet() {
		return true
	}

	return false
}

// SetEXTERNAL_WEB_LOADER_API_KEY gets a reference to the given NullableString and assigns it to the EXTERNAL_WEB_LOADER_API_KEY field.
func (o *WebConfig) SetEXTERNAL_WEB_LOADER_API_KEY(v string) {
	o.EXTERNAL_WEB_LOADER_API_KEY.Set(&v)
}
// SetEXTERNAL_WEB_LOADER_API_KEYNil sets the value for EXTERNAL_WEB_LOADER_API_KEY to be an explicit nil
func (o *WebConfig) SetEXTERNAL_WEB_LOADER_API_KEYNil() {
	o.EXTERNAL_WEB_LOADER_API_KEY.Set(nil)
}

// UnsetEXTERNAL_WEB_LOADER_API_KEY ensures that no value is present for EXTERNAL_WEB_LOADER_API_KEY, not even an explicit nil
func (o *WebConfig) UnsetEXTERNAL_WEB_LOADER_API_KEY() {
	o.EXTERNAL_WEB_LOADER_API_KEY.Unset()
}

// GetYOUTUBE_LOADER_LANGUAGE returns the YOUTUBE_LOADER_LANGUAGE field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetYOUTUBE_LOADER_LANGUAGE() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.YOUTUBE_LOADER_LANGUAGE
}

// GetYOUTUBE_LOADER_LANGUAGEOk returns a tuple with the YOUTUBE_LOADER_LANGUAGE field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetYOUTUBE_LOADER_LANGUAGEOk() ([]string, bool) {
	if o == nil || IsNil(o.YOUTUBE_LOADER_LANGUAGE) {
		return nil, false
	}
	return o.YOUTUBE_LOADER_LANGUAGE, true
}

// HasYOUTUBE_LOADER_LANGUAGE returns a boolean if a field has been set.
func (o *WebConfig) HasYOUTUBE_LOADER_LANGUAGE() bool {
	if o != nil && !IsNil(o.YOUTUBE_LOADER_LANGUAGE) {
		return true
	}

	return false
}

// SetYOUTUBE_LOADER_LANGUAGE gets a reference to the given []string and assigns it to the YOUTUBE_LOADER_LANGUAGE field.
func (o *WebConfig) SetYOUTUBE_LOADER_LANGUAGE(v []string) {
	o.YOUTUBE_LOADER_LANGUAGE = v
}

// GetYOUTUBE_LOADER_PROXY_URL returns the YOUTUBE_LOADER_PROXY_URL field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetYOUTUBE_LOADER_PROXY_URL() string {
	if o == nil || IsNil(o.YOUTUBE_LOADER_PROXY_URL.Get()) {
		var ret string
		return ret
	}
	return *o.YOUTUBE_LOADER_PROXY_URL.Get()
}

// GetYOUTUBE_LOADER_PROXY_URLOk returns a tuple with the YOUTUBE_LOADER_PROXY_URL field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetYOUTUBE_LOADER_PROXY_URLOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.YOUTUBE_LOADER_PROXY_URL.Get(), o.YOUTUBE_LOADER_PROXY_URL.IsSet()
}

// HasYOUTUBE_LOADER_PROXY_URL returns a boolean if a field has been set.
func (o *WebConfig) HasYOUTUBE_LOADER_PROXY_URL() bool {
	if o != nil && o.YOUTUBE_LOADER_PROXY_URL.IsSet() {
		return true
	}

	return false
}

// SetYOUTUBE_LOADER_PROXY_URL gets a reference to the given NullableString and assigns it to the YOUTUBE_LOADER_PROXY_URL field.
func (o *WebConfig) SetYOUTUBE_LOADER_PROXY_URL(v string) {
	o.YOUTUBE_LOADER_PROXY_URL.Set(&v)
}
// SetYOUTUBE_LOADER_PROXY_URLNil sets the value for YOUTUBE_LOADER_PROXY_URL to be an explicit nil
func (o *WebConfig) SetYOUTUBE_LOADER_PROXY_URLNil() {
	o.YOUTUBE_LOADER_PROXY_URL.Set(nil)
}

// UnsetYOUTUBE_LOADER_PROXY_URL ensures that no value is present for YOUTUBE_LOADER_PROXY_URL, not even an explicit nil
func (o *WebConfig) UnsetYOUTUBE_LOADER_PROXY_URL() {
	o.YOUTUBE_LOADER_PROXY_URL.Unset()
}

// GetYOUTUBE_LOADER_TRANSLATION returns the YOUTUBE_LOADER_TRANSLATION field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebConfig) GetYOUTUBE_LOADER_TRANSLATION() string {
	if o == nil || IsNil(o.YOUTUBE_LOADER_TRANSLATION.Get()) {
		var ret string
		return ret
	}
	return *o.YOUTUBE_LOADER_TRANSLATION.Get()
}

// GetYOUTUBE_LOADER_TRANSLATIONOk returns a tuple with the YOUTUBE_LOADER_TRANSLATION field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebConfig) GetYOUTUBE_LOADER_TRANSLATIONOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.YOUTUBE_LOADER_TRANSLATION.Get(), o.YOUTUBE_LOADER_TRANSLATION.IsSet()
}

// HasYOUTUBE_LOADER_TRANSLATION returns a boolean if a field has been set.
func (o *WebConfig) HasYOUTUBE_LOADER_TRANSLATION() bool {
	if o != nil && o.YOUTUBE_LOADER_TRANSLATION.IsSet() {
		return true
	}

	return false
}

// SetYOUTUBE_LOADER_TRANSLATION gets a reference to the given NullableString and assigns it to the YOUTUBE_LOADER_TRANSLATION field.
func (o *WebConfig) SetYOUTUBE_LOADER_TRANSLATION(v string) {
	o.YOUTUBE_LOADER_TRANSLATION.Set(&v)
}
// SetYOUTUBE_LOADER_TRANSLATIONNil sets the value for YOUTUBE_LOADER_TRANSLATION to be an explicit nil
func (o *WebConfig) SetYOUTUBE_LOADER_TRANSLATIONNil() {
	o.YOUTUBE_LOADER_TRANSLATION.Set(nil)
}

// UnsetYOUTUBE_LOADER_TRANSLATION ensures that no value is present for YOUTUBE_LOADER_TRANSLATION, not even an explicit nil
func (o *WebConfig) UnsetYOUTUBE_LOADER_TRANSLATION() {
	o.YOUTUBE_LOADER_TRANSLATION.Unset()
}

func (o WebConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ENABLE_WEB_SEARCH.IsSet() {
		toSerialize["ENABLE_WEB_SEARCH"] = o.ENABLE_WEB_SEARCH.Get()
	}
	if o.WEB_SEARCH_ENGINE.IsSet() {
		toSerialize["WEB_SEARCH_ENGINE"] = o.WEB_SEARCH_ENGINE.Get()
	}
	if o.WEB_SEARCH_TRUST_ENV.IsSet() {
		toSerialize["WEB_SEARCH_TRUST_ENV"] = o.WEB_SEARCH_TRUST_ENV.Get()
	}
	if o.WEB_SEARCH_RESULT_COUNT.IsSet() {
		toSerialize["WEB_SEARCH_RESULT_COUNT"] = o.WEB_SEARCH_RESULT_COUNT.Get()
	}
	if o.WEB_SEARCH_CONCURRENT_REQUESTS.IsSet() {
		toSerialize["WEB_SEARCH_CONCURRENT_REQUESTS"] = o.WEB_SEARCH_CONCURRENT_REQUESTS.Get()
	}
	if o.WEB_SEARCH_DOMAIN_FILTER_LIST != nil {
		toSerialize["WEB_SEARCH_DOMAIN_FILTER_LIST"] = o.WEB_SEARCH_DOMAIN_FILTER_LIST
	}
	if o.BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL.IsSet() {
		toSerialize["BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL"] = o.BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL.Get()
	}
	if o.BYPASS_WEB_SEARCH_WEB_LOADER.IsSet() {
		toSerialize["BYPASS_WEB_SEARCH_WEB_LOADER"] = o.BYPASS_WEB_SEARCH_WEB_LOADER.Get()
	}
	if o.SEARXNG_QUERY_URL.IsSet() {
		toSerialize["SEARXNG_QUERY_URL"] = o.SEARXNG_QUERY_URL.Get()
	}
	if o.YACY_QUERY_URL.IsSet() {
		toSerialize["YACY_QUERY_URL"] = o.YACY_QUERY_URL.Get()
	}
	if o.YACY_USERNAME.IsSet() {
		toSerialize["YACY_USERNAME"] = o.YACY_USERNAME.Get()
	}
	if o.YACY_PASSWORD.IsSet() {
		toSerialize["YACY_PASSWORD"] = o.YACY_PASSWORD.Get()
	}
	if o.GOOGLE_PSE_API_KEY.IsSet() {
		toSerialize["GOOGLE_PSE_API_KEY"] = o.GOOGLE_PSE_API_KEY.Get()
	}
	if o.GOOGLE_PSE_ENGINE_ID.IsSet() {
		toSerialize["GOOGLE_PSE_ENGINE_ID"] = o.GOOGLE_PSE_ENGINE_ID.Get()
	}
	if o.BRAVE_SEARCH_API_KEY.IsSet() {
		toSerialize["BRAVE_SEARCH_API_KEY"] = o.BRAVE_SEARCH_API_KEY.Get()
	}
	if o.KAGI_SEARCH_API_KEY.IsSet() {
		toSerialize["KAGI_SEARCH_API_KEY"] = o.KAGI_SEARCH_API_KEY.Get()
	}
	if o.MOJEEK_SEARCH_API_KEY.IsSet() {
		toSerialize["MOJEEK_SEARCH_API_KEY"] = o.MOJEEK_SEARCH_API_KEY.Get()
	}
	if o.BOCHA_SEARCH_API_KEY.IsSet() {
		toSerialize["BOCHA_SEARCH_API_KEY"] = o.BOCHA_SEARCH_API_KEY.Get()
	}
	if o.SERPSTACK_API_KEY.IsSet() {
		toSerialize["SERPSTACK_API_KEY"] = o.SERPSTACK_API_KEY.Get()
	}
	if o.SERPSTACK_HTTPS.IsSet() {
		toSerialize["SERPSTACK_HTTPS"] = o.SERPSTACK_HTTPS.Get()
	}
	if o.SERPER_API_KEY.IsSet() {
		toSerialize["SERPER_API_KEY"] = o.SERPER_API_KEY.Get()
	}
	if o.SERPLY_API_KEY.IsSet() {
		toSerialize["SERPLY_API_KEY"] = o.SERPLY_API_KEY.Get()
	}
	if o.TAVILY_API_KEY.IsSet() {
		toSerialize["TAVILY_API_KEY"] = o.TAVILY_API_KEY.Get()
	}
	if o.SEARCHAPI_API_KEY.IsSet() {
		toSerialize["SEARCHAPI_API_KEY"] = o.SEARCHAPI_API_KEY.Get()
	}
	if o.SEARCHAPI_ENGINE.IsSet() {
		toSerialize["SEARCHAPI_ENGINE"] = o.SEARCHAPI_ENGINE.Get()
	}
	if o.SERPAPI_API_KEY.IsSet() {
		toSerialize["SERPAPI_API_KEY"] = o.SERPAPI_API_KEY.Get()
	}
	if o.SERPAPI_ENGINE.IsSet() {
		toSerialize["SERPAPI_ENGINE"] = o.SERPAPI_ENGINE.Get()
	}
	if o.JINA_API_KEY.IsSet() {
		toSerialize["JINA_API_KEY"] = o.JINA_API_KEY.Get()
	}
	if o.BINGSEARCHV7ENDPOINT.IsSet() {
		toSerialize["BING_SEARCH_V7_ENDPOINT"] = o.BINGSEARCHV7ENDPOINT.Get()
	}
	if o.BINGSEARCHV7SUBSCRIPTIONKEY.IsSet() {
		toSerialize["BING_SEARCH_V7_SUBSCRIPTION_KEY"] = o.BINGSEARCHV7SUBSCRIPTIONKEY.Get()
	}
	if o.EXA_API_KEY.IsSet() {
		toSerialize["EXA_API_KEY"] = o.EXA_API_KEY.Get()
	}
	if o.PERPLEXITY_API_KEY.IsSet() {
		toSerialize["PERPLEXITY_API_KEY"] = o.PERPLEXITY_API_KEY.Get()
	}
	if o.PERPLEXITY_MODEL.IsSet() {
		toSerialize["PERPLEXITY_MODEL"] = o.PERPLEXITY_MODEL.Get()
	}
	if o.PERPLEXITY_SEARCH_CONTEXT_USAGE.IsSet() {
		toSerialize["PERPLEXITY_SEARCH_CONTEXT_USAGE"] = o.PERPLEXITY_SEARCH_CONTEXT_USAGE.Get()
	}
	if o.SOUGOU_API_SID.IsSet() {
		toSerialize["SOUGOU_API_SID"] = o.SOUGOU_API_SID.Get()
	}
	if o.SOUGOU_API_SK.IsSet() {
		toSerialize["SOUGOU_API_SK"] = o.SOUGOU_API_SK.Get()
	}
	if o.WEB_LOADER_ENGINE.IsSet() {
		toSerialize["WEB_LOADER_ENGINE"] = o.WEB_LOADER_ENGINE.Get()
	}
	if o.ENABLE_WEB_LOADER_SSL_VERIFICATION.IsSet() {
		toSerialize["ENABLE_WEB_LOADER_SSL_VERIFICATION"] = o.ENABLE_WEB_LOADER_SSL_VERIFICATION.Get()
	}
	if o.PLAYWRIGHT_WS_URL.IsSet() {
		toSerialize["PLAYWRIGHT_WS_URL"] = o.PLAYWRIGHT_WS_URL.Get()
	}
	if o.PLAYWRIGHT_TIMEOUT.IsSet() {
		toSerialize["PLAYWRIGHT_TIMEOUT"] = o.PLAYWRIGHT_TIMEOUT.Get()
	}
	if o.FIRECRAWL_API_KEY.IsSet() {
		toSerialize["FIRECRAWL_API_KEY"] = o.FIRECRAWL_API_KEY.Get()
	}
	if o.FIRECRAWL_API_BASE_URL.IsSet() {
		toSerialize["FIRECRAWL_API_BASE_URL"] = o.FIRECRAWL_API_BASE_URL.Get()
	}
	if o.TAVILY_EXTRACT_DEPTH.IsSet() {
		toSerialize["TAVILY_EXTRACT_DEPTH"] = o.TAVILY_EXTRACT_DEPTH.Get()
	}
	if o.EXTERNAL_WEB_SEARCH_URL.IsSet() {
		toSerialize["EXTERNAL_WEB_SEARCH_URL"] = o.EXTERNAL_WEB_SEARCH_URL.Get()
	}
	if o.EXTERNAL_WEB_SEARCH_API_KEY.IsSet() {
		toSerialize["EXTERNAL_WEB_SEARCH_API_KEY"] = o.EXTERNAL_WEB_SEARCH_API_KEY.Get()
	}
	if o.EXTERNAL_WEB_LOADER_URL.IsSet() {
		toSerialize["EXTERNAL_WEB_LOADER_URL"] = o.EXTERNAL_WEB_LOADER_URL.Get()
	}
	if o.EXTERNAL_WEB_LOADER_API_KEY.IsSet() {
		toSerialize["EXTERNAL_WEB_LOADER_API_KEY"] = o.EXTERNAL_WEB_LOADER_API_KEY.Get()
	}
	if o.YOUTUBE_LOADER_LANGUAGE != nil {
		toSerialize["YOUTUBE_LOADER_LANGUAGE"] = o.YOUTUBE_LOADER_LANGUAGE
	}
	if o.YOUTUBE_LOADER_PROXY_URL.IsSet() {
		toSerialize["YOUTUBE_LOADER_PROXY_URL"] = o.YOUTUBE_LOADER_PROXY_URL.Get()
	}
	if o.YOUTUBE_LOADER_TRANSLATION.IsSet() {
		toSerialize["YOUTUBE_LOADER_TRANSLATION"] = o.YOUTUBE_LOADER_TRANSLATION.Get()
	}
	return toSerialize, nil
}

type NullableWebConfig struct {
	value *WebConfig
	isSet bool
}

func (v NullableWebConfig) Get() *WebConfig {
	return v.value
}

func (v *NullableWebConfig) Set(val *WebConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableWebConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableWebConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebConfig(val *WebConfig) *NullableWebConfig {
	return &NullableWebConfig{value: val, isSet: true}
}

func (v NullableWebConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


